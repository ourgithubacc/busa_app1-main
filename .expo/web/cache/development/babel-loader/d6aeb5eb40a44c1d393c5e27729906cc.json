{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport CInput from \"../TextInput\";\nimport { useDeviceOrientation } from \"../../useDeviceOrientation\";\nimport { useDetectDevice } from \"../../toolkits\";\nimport { styles } from \"./styles\";\nimport _ from 'lodash';\nvar isTablet = useDetectDevice.isTablet,\n  isIOS = useDetectDevice.isIOS;\nvar ic_down = require(\"../../assets/down.png\");\nvar defaultProps = {\n  placeholder: 'Select item',\n  activeColor: '#F6F7F8',\n  data: [],\n  style: {},\n  selectedTextProps: {}\n};\nvar DropdownComponent = React.forwardRef(function (props, currentRef) {\n  var orientation = useDeviceOrientation();\n  var testID = props.testID,\n    itemTestIDField = props.itemTestIDField,\n    onChange = props.onChange,\n    style = props.style,\n    containerStyle = props.containerStyle,\n    placeholderStyle = props.placeholderStyle,\n    selectedTextStyle = props.selectedTextStyle,\n    itemContainerStyle = props.itemContainerStyle,\n    itemTextStyle = props.itemTextStyle,\n    inputSearchStyle = props.inputSearchStyle,\n    iconStyle = props.iconStyle,\n    selectedTextProps = props.selectedTextProps,\n    data = props.data,\n    labelField = props.labelField,\n    valueField = props.valueField,\n    value = props.value,\n    activeColor = props.activeColor,\n    fontFamily = props.fontFamily,\n    _props$iconColor = props.iconColor,\n    iconColor = _props$iconColor === void 0 ? 'gray' : _props$iconColor,\n    searchPlaceholder = props.searchPlaceholder,\n    placeholder = props.placeholder,\n    _props$search = props.search,\n    search = _props$search === void 0 ? false : _props$search,\n    _props$maxHeight = props.maxHeight,\n    maxHeight = _props$maxHeight === void 0 ? 340 : _props$maxHeight,\n    _props$disable = props.disable,\n    disable = _props$disable === void 0 ? false : _props$disable,\n    _props$keyboardAvoidi = props.keyboardAvoiding,\n    keyboardAvoiding = _props$keyboardAvoidi === void 0 ? true : _props$keyboardAvoidi,\n    renderLeftIcon = props.renderLeftIcon,\n    renderRightIcon = props.renderRightIcon,\n    renderItem = props.renderItem,\n    renderInputSearch = props.renderInputSearch,\n    onFocus = props.onFocus,\n    onBlur = props.onBlur,\n    _props$autoScroll = props.autoScroll,\n    autoScroll = _props$autoScroll === void 0 ? true : _props$autoScroll,\n    _props$showsVerticalS = props.showsVerticalScrollIndicator,\n    showsVerticalScrollIndicator = _props$showsVerticalS === void 0 ? true : _props$showsVerticalS,\n    _props$dropdownPositi = props.dropdownPosition,\n    dropdownPosition = _props$dropdownPositi === void 0 ? 'auto' : _props$dropdownPositi,\n    flatListProps = props.flatListProps,\n    searchQuery = props.searchQuery,\n    statusBarIsTranslucent = props.statusBarIsTranslucent,\n    backgroundColor = props.backgroundColor,\n    _onChangeText = props.onChangeText,\n    confirmSelectItem = props.confirmSelectItem,\n    onConfirmSelectItem = props.onConfirmSelectItem,\n    accessibilityLabel = props.accessibilityLabel,\n    itemAccessibilityLabelField = props.itemAccessibilityLabelField;\n  var ref = useRef(null);\n  var refList = useRef(null);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    visible = _useState2[0],\n    setVisible = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    currentValue = _useState4[0],\n    setCurrentValue = _useState4[1];\n  var _useState5 = useState(data),\n    _useState6 = _slicedToArray(_useState5, 2),\n    listData = _useState6[0],\n    setListData = _useState6[1];\n  var _useState7 = useState(),\n    _useState8 = _slicedToArray(_useState7, 2),\n    position = _useState8[0],\n    setPosition = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    focus = _useState10[0],\n    setFocus = _useState10[1];\n  var _useState11 = useState(0),\n    _useState12 = _slicedToArray(_useState11, 2),\n    keyboardHeight = _useState12[0],\n    setKeyboardHeight = _useState12[1];\n  var _useState13 = useState(''),\n    _useState14 = _slicedToArray(_useState13, 2),\n    searchText = _useState14[0],\n    setSearchText = _useState14[1];\n  var _Dimensions$get = Dimensions.get('window'),\n    W = _Dimensions$get.width,\n    H = _Dimensions$get.height;\n  var styleContainerVertical = useMemo(function () {\n    return {\n      backgroundColor: 'rgba(0,0,0,0.1)',\n      alignItems: 'center'\n    };\n  }, []);\n  var styleHorizontal = useMemo(function () {\n    return {\n      marginBottom: 20,\n      width: W / 2,\n      alignSelf: 'center'\n    };\n  }, [W]);\n  useImperativeHandle(currentRef, function () {\n    return {\n      open: eventOpen,\n      close: eventClose\n    };\n  });\n  useEffect(function () {\n    setListData(_toConsumableArray(data));\n    if (searchText) {\n      onSearch(searchText);\n    }\n  }, [data, searchText]);\n  var eventOpen = function eventOpen() {\n    if (!disable) {\n      setVisible(true);\n      if (onFocus) {\n        onFocus();\n      }\n    }\n  };\n  var eventClose = useCallback(function () {\n    if (!disable) {\n      setVisible(false);\n      if (onBlur) {\n        onBlur();\n      }\n    }\n  }, [disable, onBlur]);\n  var font = useCallback(function () {\n    if (fontFamily) {\n      return {\n        fontFamily: fontFamily\n      };\n    } else {\n      return {};\n    }\n  }, [fontFamily]);\n  var _measure = useCallback(function () {\n    if (ref && ref !== null && ref !== void 0 && ref.current) {\n      ref.current.measure(function (_width, _height, px, py, fx, fy) {\n        var isFull = orientation === 'LANDSCAPE' && !isTablet;\n        var w = Math.floor(px);\n        var top = isFull ? 20 : Math.floor(py) + Math.floor(fy) + 2;\n        var bottom = H - top;\n        var left = I18nManager.isRTL ? W - Math.floor(px) - Math.floor(fx) : Math.floor(fx);\n        setPosition({\n          isFull: isFull,\n          w: w,\n          top: top,\n          bottom: Math.floor(bottom),\n          left: left,\n          height: Math.floor(py)\n        });\n      });\n    }\n  }, [H, W, orientation]);\n  var onKeyboardDidShow = useCallback(function (e) {\n    _measure();\n    setKeyboardHeight(e.endCoordinates.height);\n  }, [_measure]);\n  var onKeyboardDidHide = useCallback(function () {\n    setKeyboardHeight(0);\n    _measure();\n  }, [_measure]);\n  useEffect(function () {\n    var susbcriptionKeyboardDidShow = Keyboard.addListener('keyboardDidShow', onKeyboardDidShow);\n    var susbcriptionKeyboardDidHide = Keyboard.addListener('keyboardDidHide', onKeyboardDidHide);\n    return function () {\n      if (typeof (susbcriptionKeyboardDidShow === null || susbcriptionKeyboardDidShow === void 0 ? void 0 : susbcriptionKeyboardDidShow.remove) === 'function') {\n        susbcriptionKeyboardDidShow.remove();\n      } else {\n        Keyboard.removeListener('keyboardDidShow', onKeyboardDidShow);\n      }\n      if (typeof (susbcriptionKeyboardDidHide === null || susbcriptionKeyboardDidHide === void 0 ? void 0 : susbcriptionKeyboardDidHide.remove) === 'function') {\n        susbcriptionKeyboardDidHide.remove();\n      } else {\n        Keyboard.removeListener('keyboardDidHide', onKeyboardDidHide);\n      }\n    };\n  }, [onKeyboardDidHide, onKeyboardDidShow]);\n  var getValue = useCallback(function () {\n    var defaultValue = typeof value === 'object' ? _.get(value, valueField) : value;\n    var getItem = data.filter(function (e) {\n      return _.isEqual(defaultValue, _.get(e, valueField));\n    });\n    if (getItem.length > 0) {\n      setCurrentValue(getItem[0]);\n    } else {\n      setCurrentValue(null);\n    }\n  }, [data, value, valueField]);\n  useEffect(function () {\n    getValue();\n  }, [value, data, getValue]);\n  var scrollIndex = useCallback(function () {\n    if (autoScroll && data.length > 0 && listData.length === data.length) {\n      setTimeout(function () {\n        if (refList && refList !== null && refList !== void 0 && refList.current) {\n          var defaultValue = typeof value === 'object' ? _.get(value, valueField) : value;\n          var index = _.findIndex(listData, function (e) {\n            return _.isEqual(defaultValue, _.get(e, valueField));\n          });\n          if (index > -1 && index <= listData.length - 1) {\n            var _refList$current;\n            refList === null || refList === void 0 ? void 0 : (_refList$current = refList.current) === null || _refList$current === void 0 ? void 0 : _refList$current.scrollToIndex({\n              index: index,\n              animated: false\n            });\n          }\n        }\n      }, 200);\n    }\n  }, [autoScroll, data.length, listData, value, valueField]);\n  var showOrClose = useCallback(function () {\n    if (!disable) {\n      _measure();\n      setVisible(!visible);\n      setListData(data);\n      if (!visible) {\n        if (onFocus) {\n          onFocus();\n        }\n      } else {\n        if (onBlur) {\n          onBlur();\n        }\n      }\n    }\n    scrollIndex();\n  }, [_measure, data, disable, onBlur, onFocus, scrollIndex, visible]);\n  var onSearch = useCallback(function (text) {\n    if (text.length > 0) {\n      var defaultFilterFunction = function defaultFilterFunction(e) {\n        var _$get;\n        var item = (_$get = _.get(e, labelField)) === null || _$get === void 0 ? void 0 : _$get.toLowerCase().replace(' ', '').normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n        var key = text.toLowerCase().replace(' ', '').normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n        return item.indexOf(key) >= 0;\n      };\n      var propSearchFunction = function propSearchFunction(e) {\n        var labelText = _.get(e, labelField);\n        return searchQuery === null || searchQuery === void 0 ? void 0 : searchQuery(text, labelText);\n      };\n      var dataSearch = data.filter(searchQuery ? propSearchFunction : defaultFilterFunction);\n      setListData(dataSearch);\n    } else {\n      setListData(data);\n    }\n  }, [data, labelField, searchQuery]);\n  var onSelect = useCallback(function (item) {\n    if (confirmSelectItem && onConfirmSelectItem) {\n      return onConfirmSelectItem(item);\n    }\n    if (_onChangeText) {\n      setSearchText('');\n      _onChangeText('');\n    }\n    onSearch('');\n    setCurrentValue(item);\n    onChange(item);\n    eventClose();\n  }, [confirmSelectItem, eventClose, onChange, _onChangeText, onConfirmSelectItem, onSearch]);\n  var _renderDropdown = function _renderDropdown() {\n    var isSelected = currentValue && _.get(currentValue, valueField);\n    return React.createElement(TouchableWithoutFeedback, {\n      testID: testID,\n      accessible: !!accessibilityLabel,\n      accessibilityLabel: accessibilityLabel,\n      onPress: showOrClose\n    }, React.createElement(View, {\n      style: styles.dropdown\n    }, renderLeftIcon === null || renderLeftIcon === void 0 ? void 0 : renderLeftIcon(), React.createElement(Text, _extends({\n      style: [styles.textItem, isSelected !== null ? selectedTextStyle : placeholderStyle, font()]\n    }, selectedTextProps), isSelected !== null ? _.get(currentValue, labelField) : placeholder), renderRightIcon ? renderRightIcon() : React.createElement(Image, {\n      source: ic_down,\n      style: StyleSheet.flatten([styles.icon, {\n        tintColor: iconColor\n      }, iconStyle])\n    })));\n  };\n  var _renderItem = useCallback(function (_ref) {\n    var item = _ref.item,\n      index = _ref.index;\n    var isSelected = currentValue && _.get(currentValue, valueField);\n    var selected = _.isEqual(_.get(item, valueField), isSelected);\n    _.assign(item, {\n      _index: index\n    });\n    return React.createElement(TouchableHighlight, {\n      key: index.toString(),\n      testID: _.get(item, itemTestIDField || labelField),\n      accessible: !!accessibilityLabel,\n      accessibilityLabel: _.get(item, itemAccessibilityLabelField || labelField),\n      underlayColor: activeColor,\n      onPress: function onPress() {\n        return onSelect(item);\n      }\n    }, React.createElement(View, {\n      style: StyleSheet.flatten([itemContainerStyle, selected && {\n        backgroundColor: activeColor\n      }])\n    }, renderItem ? renderItem(item, selected) : React.createElement(View, {\n      style: styles.item\n    }, React.createElement(Text, {\n      style: StyleSheet.flatten([styles.textItem, itemTextStyle, font()])\n    }, _.get(item, labelField)))));\n  }, [accessibilityLabel, activeColor, currentValue, font, itemAccessibilityLabelField, itemContainerStyle, itemTestIDField, itemTextStyle, labelField, onSelect, renderItem, valueField]);\n  var renderSearch = useCallback(function () {\n    if (search) {\n      if (renderInputSearch) {\n        return renderInputSearch(function (text) {\n          if (_onChangeText) {\n            setSearchText(text);\n            _onChangeText(text);\n          }\n          onSearch(text);\n        });\n      } else {\n        return React.createElement(CInput, {\n          testID: testID + ' input',\n          accessibilityLabel: accessibilityLabel + ' input',\n          style: [styles.input, inputSearchStyle],\n          inputStyle: [inputSearchStyle, font()],\n          autoCorrect: false,\n          placeholder: searchPlaceholder,\n          onChangeText: function onChangeText(e) {\n            if (_onChangeText) {\n              setSearchText(e);\n              _onChangeText(e);\n            }\n            onSearch(e);\n          },\n          placeholderTextColor: \"gray\",\n          iconStyle: [{\n            tintColor: iconColor\n          }, iconStyle],\n          onFocus: function onFocus() {\n            return setFocus(true);\n          },\n          onBlur: function onBlur() {\n            setFocus(false);\n          }\n        });\n      }\n    }\n    return null;\n  }, [accessibilityLabel, font, iconColor, iconStyle, inputSearchStyle, _onChangeText, onSearch, renderInputSearch, search, searchPlaceholder, testID]);\n  var _renderListTop = useCallback(function () {\n    return React.createElement(TouchableWithoutFeedback, null, React.createElement(View, {\n      style: styles.flexShrink\n    }, React.createElement(FlatList, _extends({\n      testID: testID + ' flatlist',\n      accessibilityLabel: accessibilityLabel + ' flatlist'\n    }, flatListProps, {\n      keyboardShouldPersistTaps: \"handled\",\n      ref: refList,\n      onScrollToIndexFailed: scrollIndex,\n      data: listData,\n      inverted: true,\n      renderItem: _renderItem,\n      keyExtractor: function keyExtractor(_item, index) {\n        return index.toString();\n      },\n      showsVerticalScrollIndicator: showsVerticalScrollIndicator\n    })), renderSearch()));\n  }, [_renderItem, accessibilityLabel, flatListProps, listData, renderSearch, scrollIndex, showsVerticalScrollIndicator, testID]);\n  var _renderListBottom = useCallback(function () {\n    return React.createElement(TouchableWithoutFeedback, null, React.createElement(View, {\n      style: styles.flexShrink\n    }, renderSearch(), React.createElement(FlatList, _extends({\n      testID: testID + ' flatlist',\n      accessibilityLabel: accessibilityLabel + ' flatlist'\n    }, flatListProps, {\n      keyboardShouldPersistTaps: \"handled\",\n      ref: refList,\n      onScrollToIndexFailed: scrollIndex,\n      data: listData,\n      renderItem: _renderItem,\n      keyExtractor: function keyExtractor(_item, index) {\n        return index.toString();\n      },\n      showsVerticalScrollIndicator: showsVerticalScrollIndicator\n    }))));\n  }, [_renderItem, accessibilityLabel, flatListProps, listData, renderSearch, scrollIndex, showsVerticalScrollIndicator, testID]);\n  var _renderModal = useCallback(function () {\n    if (visible && position) {\n      var isFull = position.isFull,\n        w = position.w,\n        top = position.top,\n        bottom = position.bottom,\n        left = position.left,\n        height = position.height;\n      if (w && top && bottom) {\n        var styleVertical = {\n          left: left,\n          maxHeight: maxHeight\n        };\n        var isTopPosition = dropdownPosition === 'auto' ? bottom < (isIOS ? 200 : search ? 310 : 300) : dropdownPosition === 'top' ? true : false;\n        var topHeight = isTopPosition ? top - height : top;\n        var keyboardStyle = {};\n        if (keyboardAvoiding) {\n          if (renderInputSearch) {\n            if (keyboardHeight > 0 && bottom < keyboardHeight + height) {\n              if (isTopPosition) {\n                topHeight = H - keyboardHeight;\n              } else {\n                keyboardStyle = {\n                  backgroundColor: 'rgba(0,0,0,0.1)'\n                };\n                topHeight = H - keyboardHeight - 55;\n              }\n            }\n          } else {\n            if (focus && keyboardHeight > 0 && bottom < keyboardHeight + height) {\n              if (isTopPosition) {\n                topHeight = H - keyboardHeight;\n              } else {\n                keyboardStyle = {\n                  backgroundColor: 'rgba(0,0,0,0.1)'\n                };\n                topHeight = H - keyboardHeight - 55;\n              }\n            }\n          }\n        }\n        return React.createElement(Modal, {\n          transparent: true,\n          statusBarTranslucent: statusBarIsTranslucent,\n          visible: visible,\n          supportedOrientations: ['landscape', 'portrait'],\n          onRequestClose: showOrClose\n        }, React.createElement(TouchableWithoutFeedback, {\n          onPress: showOrClose\n        }, React.createElement(View, {\n          style: StyleSheet.flatten([styles.flex1, isFull && styleContainerVertical, backgroundColor && {\n            backgroundColor: backgroundColor\n          }, keyboardStyle])\n        }, React.createElement(View, {\n          style: StyleSheet.flatten([styles.wrapTop, {\n            height: topHeight,\n            width: w\n          }])\n        }, isTopPosition && React.createElement(View, {\n          style: StyleSheet.flatten([{\n            width: w\n          }, styles.container, containerStyle, isFull ? styleHorizontal : styleVertical])\n        }, _renderListTop())), React.createElement(View, {\n          style: styles.flex1\n        }, !isTopPosition && React.createElement(View, {\n          style: StyleSheet.flatten([{\n            width: w\n          }, styles.container, containerStyle, isFull ? styleHorizontal : styleVertical])\n        }, _renderListBottom())))));\n      }\n      return null;\n    }\n    return null;\n  }, [visible, position, maxHeight, dropdownPosition, search, keyboardAvoiding, statusBarIsTranslucent, showOrClose, styleContainerVertical, backgroundColor, containerStyle, styleHorizontal, _renderListTop, _renderListBottom, renderInputSearch, keyboardHeight, H, focus]);\n  return React.createElement(View, {\n    style: StyleSheet.flatten([styles.mainWrap, style]),\n    ref: ref,\n    onLayout: _measure\n  }, _renderDropdown(), _renderModal());\n});\nDropdownComponent.defaultProps = defaultProps;\nexport default DropdownComponent;","map":{"version":3,"mappings":"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","names":["React","useCallback","useEffect","useImperativeHandle","useMemo","useRef","useState","CInput","useDeviceOrientation","useDetectDevice","styles","_","isTablet","isIOS","ic_down","require","defaultProps","placeholder","activeColor","data","style","selectedTextProps","DropdownComponent","forwardRef","props","currentRef","orientation","testID","itemTestIDField","onChange","containerStyle","placeholderStyle","selectedTextStyle","itemContainerStyle","itemTextStyle","inputSearchStyle","iconStyle","labelField","valueField","value","fontFamily","iconColor","searchPlaceholder","search","maxHeight","disable","keyboardAvoiding","renderLeftIcon","renderRightIcon","renderItem","renderInputSearch","onFocus","onBlur","autoScroll","showsVerticalScrollIndicator","dropdownPosition","flatListProps","searchQuery","statusBarIsTranslucent","backgroundColor","onChangeText","confirmSelectItem","onConfirmSelectItem","accessibilityLabel","itemAccessibilityLabelField","ref","refList","visible","setVisible","currentValue","setCurrentValue","listData","setListData","position","setPosition","focus","setFocus","keyboardHeight","setKeyboardHeight","searchText","setSearchText","Dimensions","get","W","width","H","height","styleContainerVertical","alignItems","styleHorizontal","marginBottom","alignSelf","open","eventOpen","close","eventClose","onSearch","font","_measure","current","measure","_width","_height","px","py","fx","fy","isFull","w","Math","floor","top","bottom","left","I18nManager","isRTL","onKeyboardDidShow","e","endCoordinates","onKeyboardDidHide","susbcriptionKeyboardDidShow","Keyboard","addListener","susbcriptionKeyboardDidHide","remove","removeListener","getValue","defaultValue","getItem","filter","isEqual","length","scrollIndex","setTimeout","index","findIndex","_refList$current","scrollToIndex","animated","showOrClose","text","defaultFilterFunction","item","_$get","toLowerCase","replace","normalize","key","indexOf","propSearchFunction","labelText","dataSearch","onSelect","_renderDropdown","isSelected","TouchableWithoutFeedback","accessible","onPress","View","dropdown","Text","textItem","Image","source","StyleSheet","flatten","icon","tintColor","_renderItem","_ref","selected","assign","_index","TouchableHighlight","toString","underlayColor","renderSearch","input","inputStyle","autoCorrect","placeholderTextColor","_renderListTop","flexShrink","FlatList","keyboardShouldPersistTaps","onScrollToIndexFailed","inverted","keyExtractor","_item","_renderListBottom","_renderModal","styleVertical","isTopPosition","topHeight","keyboardStyle","Modal","transparent","statusBarTranslucent","supportedOrientations","onRequestClose","flex1","wrapTop","container","mainWrap","onLayout"],"sources":["index.tsx"],"sourcesContent":["import React, {\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Keyboard,\n  Modal,\n  Text,\n  TouchableWithoutFeedback,\n  TouchableHighlight,\n  View,\n  ViewStyle,\n  KeyboardEvent,\n  I18nManager,\n  StyleSheet,\n} from 'react-native';\nimport CInput from '../TextInput';\nimport { useDeviceOrientation } from '../../useDeviceOrientation';\nimport { useDetectDevice } from '../../toolkits';\nimport { styles } from './styles';\nimport type { DropdownProps } from './model';\nimport _ from 'lodash';\n\nconst { isTablet, isIOS } = useDetectDevice;\nconst ic_down = require('../../assets/down.png');\n\nconst defaultProps = {\n  placeholder: 'Select item',\n  activeColor: '#F6F7F8',\n  data: [],\n  style: {},\n  selectedTextProps: {},\n};\n\nconst DropdownComponent = React.forwardRef<any, DropdownProps>(\n  (props, currentRef) => {\n    const orientation = useDeviceOrientation();\n    const {\n      testID,\n      itemTestIDField,\n      onChange,\n      style,\n      containerStyle,\n      placeholderStyle,\n      selectedTextStyle,\n      itemContainerStyle,\n      itemTextStyle,\n      inputSearchStyle,\n      iconStyle,\n      selectedTextProps,\n      data,\n      labelField,\n      valueField,\n      value,\n      activeColor,\n      fontFamily,\n      iconColor = 'gray',\n      searchPlaceholder,\n      placeholder,\n      search = false,\n      maxHeight = 340,\n      disable = false,\n      keyboardAvoiding = true,\n      renderLeftIcon,\n      renderRightIcon,\n      renderItem,\n      renderInputSearch,\n      onFocus,\n      onBlur,\n      autoScroll = true,\n      showsVerticalScrollIndicator = true,\n      dropdownPosition = 'auto',\n      flatListProps,\n      searchQuery,\n      statusBarIsTranslucent,\n      backgroundColor,\n      onChangeText,\n      confirmSelectItem,\n      onConfirmSelectItem,\n      accessibilityLabel,\n      itemAccessibilityLabelField,\n    } = props;\n\n    const ref = useRef<View>(null);\n    const refList = useRef<FlatList>(null);\n    const [visible, setVisible] = useState<boolean>(false);\n    const [currentValue, setCurrentValue] = useState<any>(null);\n    const [listData, setListData] = useState<any[]>(data);\n    const [position, setPosition] = useState<any>();\n    const [focus, setFocus] = useState<boolean>(false);\n    const [keyboardHeight, setKeyboardHeight] = useState<number>(0);\n    const [searchText, setSearchText] = useState('');\n\n    const { width: W, height: H } = Dimensions.get('window');\n    const styleContainerVertical: ViewStyle = useMemo(() => {\n      return {\n        backgroundColor: 'rgba(0,0,0,0.1)',\n        alignItems: 'center',\n      };\n    }, []);\n    const styleHorizontal: ViewStyle = useMemo(() => {\n      return {\n        marginBottom: 20,\n        width: W / 2,\n        alignSelf: 'center',\n      };\n    }, [W]);\n\n    useImperativeHandle(currentRef, () => {\n      return { open: eventOpen, close: eventClose };\n    });\n\n    useEffect(() => {\n      setListData([...data]);\n      if (searchText) {\n        onSearch(searchText);\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [data, searchText]);\n\n    const eventOpen = () => {\n      if (!disable) {\n        setVisible(true);\n        if (onFocus) {\n          onFocus();\n        }\n      }\n    };\n\n    const eventClose = useCallback(() => {\n      if (!disable) {\n        setVisible(false);\n        if (onBlur) {\n          onBlur();\n        }\n      }\n    }, [disable, onBlur]);\n\n    const font = useCallback(() => {\n      if (fontFamily) {\n        return {\n          fontFamily: fontFamily,\n        };\n      } else {\n        return {};\n      }\n    }, [fontFamily]);\n\n    const _measure = useCallback(() => {\n      if (ref && ref?.current) {\n        ref.current.measure((_width, _height, px, py, fx, fy) => {\n          const isFull = orientation === 'LANDSCAPE' && !isTablet;\n          const w = Math.floor(px);\n          const top = isFull ? 20 : Math.floor(py) + Math.floor(fy) + 2;\n          const bottom = H - top;\n          const left = I18nManager.isRTL\n            ? W - Math.floor(px) - Math.floor(fx)\n            : Math.floor(fx);\n\n          setPosition({\n            isFull,\n            w,\n            top,\n            bottom: Math.floor(bottom),\n            left,\n            height: Math.floor(py),\n          });\n        });\n      }\n    }, [H, W, orientation]);\n\n    const onKeyboardDidShow = useCallback(\n      (e: KeyboardEvent) => {\n        _measure();\n        setKeyboardHeight(e.endCoordinates.height);\n      },\n      [_measure]\n    );\n\n    const onKeyboardDidHide = useCallback(() => {\n      setKeyboardHeight(0);\n      _measure();\n    }, [_measure]);\n\n    useEffect(() => {\n      const susbcriptionKeyboardDidShow = Keyboard.addListener(\n        'keyboardDidShow',\n        onKeyboardDidShow\n      );\n      const susbcriptionKeyboardDidHide = Keyboard.addListener(\n        'keyboardDidHide',\n        onKeyboardDidHide\n      );\n\n      return () => {\n        if (typeof susbcriptionKeyboardDidShow?.remove === 'function') {\n          susbcriptionKeyboardDidShow.remove();\n        } else {\n          Keyboard.removeListener('keyboardDidShow', onKeyboardDidShow);\n        }\n\n        if (typeof susbcriptionKeyboardDidHide?.remove === 'function') {\n          susbcriptionKeyboardDidHide.remove();\n        } else {\n          Keyboard.removeListener('keyboardDidHide', onKeyboardDidHide);\n        }\n      };\n    }, [onKeyboardDidHide, onKeyboardDidShow]);\n\n    const getValue = useCallback(() => {\n      const defaultValue =\n        typeof value === 'object' ? _.get(value, valueField) : value;\n\n      const getItem = data.filter((e) =>\n        _.isEqual(defaultValue, _.get(e, valueField))\n      );\n\n      if (getItem.length > 0) {\n        setCurrentValue(getItem[0]);\n      } else {\n        setCurrentValue(null);\n      }\n    }, [data, value, valueField]);\n\n    useEffect(() => {\n      getValue();\n    }, [value, data, getValue]);\n\n    const scrollIndex = useCallback(() => {\n      if (autoScroll && data.length > 0 && listData.length === data.length) {\n        setTimeout(() => {\n          if (refList && refList?.current) {\n            const defaultValue =\n              typeof value === 'object' ? _.get(value, valueField) : value;\n\n            const index = _.findIndex(listData, (e: any) =>\n              _.isEqual(defaultValue, _.get(e, valueField))\n            );\n            if (index > -1 && index <= listData.length - 1) {\n              refList?.current?.scrollToIndex({\n                index: index,\n                animated: false,\n              });\n            }\n          }\n        }, 200);\n      }\n    }, [autoScroll, data.length, listData, value, valueField]);\n\n    const showOrClose = useCallback(() => {\n      if (!disable) {\n        _measure();\n        setVisible(!visible);\n        setListData(data);\n\n        if (!visible) {\n          if (onFocus) {\n            onFocus();\n          }\n        } else {\n          if (onBlur) {\n            onBlur();\n          }\n        }\n      }\n      scrollIndex();\n    }, [_measure, data, disable, onBlur, onFocus, scrollIndex, visible]);\n\n    const onSearch = useCallback(\n      (text: string) => {\n        if (text.length > 0) {\n          const defaultFilterFunction = (e: any) => {\n            const item = _.get(e, labelField)\n              ?.toLowerCase()\n              .replace(' ', '')\n              .normalize('NFD')\n              .replace(/[\\u0300-\\u036f]/g, '');\n            const key = text\n              .toLowerCase()\n              .replace(' ', '')\n              .normalize('NFD')\n              .replace(/[\\u0300-\\u036f]/g, '');\n\n            return item.indexOf(key) >= 0;\n          };\n\n          const propSearchFunction = (e: any) => {\n            const labelText = _.get(e, labelField);\n\n            return searchQuery?.(text, labelText);\n          };\n\n          const dataSearch = data.filter(\n            searchQuery ? propSearchFunction : defaultFilterFunction\n          );\n          setListData(dataSearch);\n        } else {\n          setListData(data);\n        }\n      },\n      [data, labelField, searchQuery]\n    );\n\n    const onSelect = useCallback(\n      (item: any) => {\n        if (confirmSelectItem && onConfirmSelectItem) {\n          return onConfirmSelectItem(item);\n        }\n\n        if (onChangeText) {\n          setSearchText('');\n          onChangeText('');\n        }\n        onSearch('');\n        setCurrentValue(item);\n        onChange(item);\n        eventClose();\n      },\n      [\n        confirmSelectItem,\n        eventClose,\n        onChange,\n        onChangeText,\n        onConfirmSelectItem,\n        onSearch,\n      ]\n    );\n\n    const _renderDropdown = () => {\n      const isSelected = currentValue && _.get(currentValue, valueField);\n      return (\n        <TouchableWithoutFeedback\n          testID={testID}\n          accessible={!!accessibilityLabel}\n          accessibilityLabel={accessibilityLabel}\n          onPress={showOrClose}\n        >\n          <View style={styles.dropdown}>\n            {renderLeftIcon?.()}\n            <Text\n              style={[\n                styles.textItem,\n                isSelected !== null ? selectedTextStyle : placeholderStyle,\n                font(),\n              ]}\n              {...selectedTextProps}\n            >\n              {isSelected !== null\n                ? _.get(currentValue, labelField)\n                : placeholder}\n            </Text>\n            {renderRightIcon ? (\n              renderRightIcon()\n            ) : (\n              <Image\n                source={ic_down}\n                style={StyleSheet.flatten([\n                  styles.icon,\n                  { tintColor: iconColor },\n                  iconStyle,\n                ])}\n              />\n            )}\n          </View>\n        </TouchableWithoutFeedback>\n      );\n    };\n\n    const _renderItem = useCallback(\n      ({ item, index }: { item: any; index: number }) => {\n        const isSelected = currentValue && _.get(currentValue, valueField);\n        const selected = _.isEqual(_.get(item, valueField), isSelected);\n        _.assign(item, { _index: index });\n        return (\n          <TouchableHighlight\n            key={index.toString()}\n            testID={_.get(item, itemTestIDField || labelField)}\n            accessible={!!accessibilityLabel}\n            accessibilityLabel={_.get(\n              item,\n              itemAccessibilityLabelField || labelField\n            )}\n            underlayColor={activeColor}\n            onPress={() => onSelect(item)}\n          >\n            <View\n              style={StyleSheet.flatten([\n                itemContainerStyle,\n                selected && {\n                  backgroundColor: activeColor,\n                },\n              ])}\n            >\n              {renderItem ? (\n                renderItem(item, selected)\n              ) : (\n                <View style={styles.item}>\n                  <Text\n                    style={StyleSheet.flatten([\n                      styles.textItem,\n                      itemTextStyle,\n                      font(),\n                    ])}\n                  >\n                    {_.get(item, labelField)}\n                  </Text>\n                </View>\n              )}\n            </View>\n          </TouchableHighlight>\n        );\n      },\n      [\n        accessibilityLabel,\n        activeColor,\n        currentValue,\n        font,\n        itemAccessibilityLabelField,\n        itemContainerStyle,\n        itemTestIDField,\n        itemTextStyle,\n        labelField,\n        onSelect,\n        renderItem,\n        valueField,\n      ]\n    );\n\n    const renderSearch = useCallback(() => {\n      if (search) {\n        if (renderInputSearch) {\n          return renderInputSearch((text) => {\n            if (onChangeText) {\n              setSearchText(text);\n              onChangeText(text);\n            }\n            onSearch(text);\n          });\n        } else {\n          return (\n            <CInput\n              testID={testID + ' input'}\n              accessibilityLabel={accessibilityLabel + ' input'}\n              style={[styles.input, inputSearchStyle]}\n              inputStyle={[inputSearchStyle, font()]}\n              autoCorrect={false}\n              placeholder={searchPlaceholder}\n              onChangeText={(e) => {\n                if (onChangeText) {\n                  setSearchText(e);\n                  onChangeText(e);\n                }\n                onSearch(e);\n              }}\n              placeholderTextColor=\"gray\"\n              iconStyle={[{ tintColor: iconColor }, iconStyle]}\n              onFocus={() => setFocus(true)}\n              onBlur={() => {\n                setFocus(false);\n              }}\n            />\n          );\n        }\n      }\n      return null;\n    }, [\n      accessibilityLabel,\n      font,\n      iconColor,\n      iconStyle,\n      inputSearchStyle,\n      onChangeText,\n      onSearch,\n      renderInputSearch,\n      search,\n      searchPlaceholder,\n      testID,\n    ]);\n\n    const _renderListTop = useCallback(() => {\n      return (\n        <TouchableWithoutFeedback>\n          <View style={styles.flexShrink}>\n            <FlatList\n              testID={testID + ' flatlist'}\n              accessibilityLabel={accessibilityLabel + ' flatlist'}\n              {...flatListProps}\n              keyboardShouldPersistTaps=\"handled\"\n              ref={refList}\n              onScrollToIndexFailed={scrollIndex}\n              data={listData}\n              inverted\n              renderItem={_renderItem}\n              keyExtractor={(_item, index) => index.toString()}\n              showsVerticalScrollIndicator={showsVerticalScrollIndicator}\n            />\n            {renderSearch()}\n          </View>\n        </TouchableWithoutFeedback>\n      );\n    }, [\n      _renderItem,\n      accessibilityLabel,\n      flatListProps,\n      listData,\n      renderSearch,\n      scrollIndex,\n      showsVerticalScrollIndicator,\n      testID,\n    ]);\n\n    const _renderListBottom = useCallback(() => {\n      return (\n        <TouchableWithoutFeedback>\n          <View style={styles.flexShrink}>\n            {renderSearch()}\n            <FlatList\n              testID={testID + ' flatlist'}\n              accessibilityLabel={accessibilityLabel + ' flatlist'}\n              {...flatListProps}\n              keyboardShouldPersistTaps=\"handled\"\n              ref={refList}\n              onScrollToIndexFailed={scrollIndex}\n              data={listData}\n              renderItem={_renderItem}\n              keyExtractor={(_item, index) => index.toString()}\n              showsVerticalScrollIndicator={showsVerticalScrollIndicator}\n            />\n          </View>\n        </TouchableWithoutFeedback>\n      );\n    }, [\n      _renderItem,\n      accessibilityLabel,\n      flatListProps,\n      listData,\n      renderSearch,\n      scrollIndex,\n      showsVerticalScrollIndicator,\n      testID,\n    ]);\n\n    const _renderModal = useCallback(() => {\n      if (visible && position) {\n        const { isFull, w, top, bottom, left, height } = position;\n        if (w && top && bottom) {\n          const styleVertical: ViewStyle = { left: left, maxHeight: maxHeight };\n          const isTopPosition =\n            dropdownPosition === 'auto'\n              ? bottom < (isIOS ? 200 : search ? 310 : 300)\n              : dropdownPosition === 'top'\n              ? true\n              : false;\n          let topHeight = isTopPosition ? top - height : top;\n\n          let keyboardStyle: ViewStyle = {};\n\n          if (keyboardAvoiding) {\n            if (renderInputSearch) {\n              if (keyboardHeight > 0 && bottom < keyboardHeight + height) {\n                if (isTopPosition) {\n                  topHeight = H - keyboardHeight;\n                } else {\n                  keyboardStyle = { backgroundColor: 'rgba(0,0,0,0.1)' };\n                  topHeight = H - keyboardHeight - 55;\n                }\n              }\n            } else {\n              if (\n                focus &&\n                keyboardHeight > 0 &&\n                bottom < keyboardHeight + height\n              ) {\n                if (isTopPosition) {\n                  topHeight = H - keyboardHeight;\n                } else {\n                  keyboardStyle = { backgroundColor: 'rgba(0,0,0,0.1)' };\n                  topHeight = H - keyboardHeight - 55;\n                }\n              }\n            }\n          }\n\n          return (\n            <Modal\n              transparent\n              statusBarTranslucent={statusBarIsTranslucent}\n              visible={visible}\n              supportedOrientations={['landscape', 'portrait']}\n              onRequestClose={showOrClose}\n            >\n              <TouchableWithoutFeedback onPress={showOrClose}>\n                <View\n                  style={StyleSheet.flatten([\n                    styles.flex1,\n                    isFull && styleContainerVertical,\n                    backgroundColor && { backgroundColor: backgroundColor },\n                    keyboardStyle,\n                  ])}\n                >\n                  <View\n                    style={StyleSheet.flatten([\n                      styles.wrapTop,\n                      {\n                        height: topHeight,\n                        width: w,\n                      },\n                    ])}\n                  >\n                    {isTopPosition && (\n                      <View\n                        style={StyleSheet.flatten([\n                          { width: w },\n                          styles.container,\n                          containerStyle,\n                          isFull ? styleHorizontal : styleVertical,\n                        ])}\n                      >\n                        {_renderListTop()}\n                      </View>\n                    )}\n                  </View>\n                  <View style={styles.flex1}>\n                    {!isTopPosition && (\n                      <View\n                        style={StyleSheet.flatten([\n                          { width: w },\n                          styles.container,\n                          containerStyle,\n                          isFull ? styleHorizontal : styleVertical,\n                        ])}\n                      >\n                        {_renderListBottom()}\n                      </View>\n                    )}\n                  </View>\n                </View>\n              </TouchableWithoutFeedback>\n            </Modal>\n          );\n        }\n        return null;\n      }\n      return null;\n    }, [\n      visible,\n      position,\n      maxHeight,\n      dropdownPosition,\n      search,\n      keyboardAvoiding,\n      statusBarIsTranslucent,\n      showOrClose,\n      styleContainerVertical,\n      backgroundColor,\n      containerStyle,\n      styleHorizontal,\n      _renderListTop,\n      _renderListBottom,\n      renderInputSearch,\n      keyboardHeight,\n      H,\n      focus,\n    ]);\n\n    return (\n      <View\n        style={StyleSheet.flatten([styles.mainWrap, style])}\n        ref={ref}\n        onLayout={_measure}\n      >\n        {_renderDropdown()}\n        {_renderModal()}\n      </View>\n    );\n  }\n);\n\nDropdownComponent.defaultProps = defaultProps;\n\nexport default DropdownComponent;\n"]},"metadata":{},"sourceType":"module"}