{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport CInput from \"../TextInput\";\nimport { useDeviceOrientation } from \"../../useDeviceOrientation\";\nimport { useDetectDevice } from \"../../toolkits\";\nimport { styles } from \"./styles\";\nimport _ from 'lodash';\nvar isTablet = useDetectDevice.isTablet,\n  isIOS = useDetectDevice.isIOS;\nvar ic_down = require(\"../../assets/down.png\");\nvar defaultProps = {\n  placeholder: 'Select item',\n  activeColor: '#F6F7F8',\n  data: [],\n  style: {}\n};\nvar MultiSelectComponent = React.forwardRef(function (props, currentRef) {\n  var orientation = useDeviceOrientation();\n  var testID = props.testID,\n    itemTestIDField = props.itemTestIDField,\n    onChange = props.onChange,\n    data = props.data,\n    value = props.value,\n    style = props.style,\n    labelField = props.labelField,\n    valueField = props.valueField,\n    selectedStyle = props.selectedStyle,\n    selectedTextStyle = props.selectedTextStyle,\n    itemContainerStyle = props.itemContainerStyle,\n    itemTextStyle = props.itemTextStyle,\n    iconStyle = props.iconStyle,\n    activeColor = props.activeColor,\n    containerStyle = props.containerStyle,\n    fontFamily = props.fontFamily,\n    placeholderStyle = props.placeholderStyle,\n    _props$iconColor = props.iconColor,\n    iconColor = _props$iconColor === void 0 ? 'gray' : _props$iconColor,\n    inputSearchStyle = props.inputSearchStyle,\n    searchPlaceholder = props.searchPlaceholder,\n    placeholder = props.placeholder,\n    _props$search = props.search,\n    search = _props$search === void 0 ? false : _props$search,\n    _props$maxHeight = props.maxHeight,\n    maxHeight = _props$maxHeight === void 0 ? 340 : _props$maxHeight,\n    maxSelect = props.maxSelect,\n    _props$disable = props.disable,\n    disable = _props$disable === void 0 ? false : _props$disable,\n    _props$keyboardAvoidi = props.keyboardAvoiding,\n    keyboardAvoiding = _props$keyboardAvoidi === void 0 ? true : _props$keyboardAvoidi,\n    _props$inside = props.inside,\n    inside = _props$inside === void 0 ? false : _props$inside,\n    renderItem = props.renderItem,\n    renderLeftIcon = props.renderLeftIcon,\n    renderRightIcon = props.renderRightIcon,\n    renderSelectedItem = props.renderSelectedItem,\n    renderInputSearch = props.renderInputSearch,\n    onFocus = props.onFocus,\n    onBlur = props.onBlur,\n    _props$showsVerticalS = props.showsVerticalScrollIndicator,\n    showsVerticalScrollIndicator = _props$showsVerticalS === void 0 ? true : _props$showsVerticalS,\n    _props$dropdownPositi = props.dropdownPosition,\n    dropdownPosition = _props$dropdownPositi === void 0 ? 'auto' : _props$dropdownPositi,\n    flatListProps = props.flatListProps,\n    _props$alwaysRenderSe = props.alwaysRenderSelectedItem,\n    alwaysRenderSelectedItem = _props$alwaysRenderSe === void 0 ? false : _props$alwaysRenderSe,\n    searchQuery = props.searchQuery,\n    statusBarIsTranslucent = props.statusBarIsTranslucent,\n    backgroundColor = props.backgroundColor,\n    _onChangeText = props.onChangeText,\n    confirmSelectItem = props.confirmSelectItem,\n    confirmUnSelectItem = props.confirmUnSelectItem,\n    onConfirmSelectItem = props.onConfirmSelectItem,\n    accessibilityLabel = props.accessibilityLabel,\n    itemAccessibilityLabelField = props.itemAccessibilityLabelField,\n    _props$visibleSelecte = props.visibleSelectedItem,\n    visibleSelectedItem = _props$visibleSelecte === void 0 ? true : _props$visibleSelecte;\n  var ref = useRef(null);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    visible = _useState2[0],\n    setVisible = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    currentValue = _useState4[0],\n    setCurrentValue = _useState4[1];\n  var _useState5 = useState(data),\n    _useState6 = _slicedToArray(_useState5, 2),\n    listData = _useState6[0],\n    setListData = _useState6[1];\n  var _useState7 = useState(Math.random()),\n    _useState8 = _slicedToArray(_useState7, 2),\n    setKey = _useState8[1];\n  var _useState9 = useState(),\n    _useState10 = _slicedToArray(_useState9, 2),\n    position = _useState10[0],\n    setPosition = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    focus = _useState12[0],\n    setFocus = _useState12[1];\n  var _useState13 = useState(0),\n    _useState14 = _slicedToArray(_useState13, 2),\n    keyboardHeight = _useState14[0],\n    setKeyboardHeight = _useState14[1];\n  var _useState15 = useState(''),\n    _useState16 = _slicedToArray(_useState15, 2),\n    searchText = _useState16[0],\n    setSearchText = _useState16[1];\n  var _Dimensions$get = Dimensions.get('window'),\n    W = _Dimensions$get.width,\n    H = _Dimensions$get.height;\n  var styleContainerVertical = useMemo(function () {\n    return {\n      backgroundColor: 'rgba(0,0,0,0.1)',\n      alignItems: 'center'\n    };\n  }, []);\n  var styleHorizontal = useMemo(function () {\n    return {\n      marginBottom: 20,\n      width: W / 2,\n      alignSelf: 'center'\n    };\n  }, [W]);\n  useImperativeHandle(currentRef, function () {\n    return {\n      open: eventOpen,\n      close: eventClose\n    };\n  });\n  useEffect(function () {\n    setListData(_toConsumableArray(data));\n    if (searchText) {\n      onSearch(searchText);\n    }\n  }, [data, searchText]);\n  var eventOpen = function eventOpen() {\n    if (!disable) {\n      setVisible(true);\n      if (onFocus) {\n        onFocus();\n      }\n    }\n  };\n  var eventClose = function eventClose() {\n    if (!disable) {\n      setVisible(false);\n      if (onBlur) {\n        onBlur();\n      }\n    }\n  };\n  var font = useCallback(function () {\n    if (fontFamily) {\n      return {\n        fontFamily: fontFamily\n      };\n    } else {\n      return {};\n    }\n  }, [fontFamily]);\n  var getValue = useCallback(function () {\n    setCurrentValue(value ? _toConsumableArray(value) : []);\n  }, [value]);\n  var _measure = useCallback(function () {\n    if (ref && ref !== null && ref !== void 0 && ref.current) {\n      ref.current.measure(function (_width, _height, px, py, fx, fy) {\n        var isFull = orientation === 'LANDSCAPE' && !isTablet;\n        var w = Math.floor(px);\n        var top = isFull ? 20 : Math.floor(py) + Math.floor(fy) + 2;\n        var bottom = H - top;\n        var left = I18nManager.isRTL ? W - Math.floor(px) - Math.floor(fx) : Math.floor(fx);\n        setPosition({\n          isFull: isFull,\n          w: w,\n          top: top,\n          bottom: Math.floor(bottom),\n          left: left,\n          height: Math.floor(py)\n        });\n      });\n    }\n  }, [H, W, orientation]);\n  var onKeyboardDidShow = useCallback(function (e) {\n    _measure();\n    setKeyboardHeight(e.endCoordinates.height);\n  }, [_measure]);\n  var onKeyboardDidHide = useCallback(function () {\n    setKeyboardHeight(0);\n    _measure();\n  }, [_measure]);\n  useEffect(function () {\n    var susbcriptionKeyboardDidShow = Keyboard.addListener('keyboardDidShow', onKeyboardDidShow);\n    var susbcriptionKeyboardDidHide = Keyboard.addListener('keyboardDidHide', onKeyboardDidHide);\n    return function () {\n      if (typeof (susbcriptionKeyboardDidShow === null || susbcriptionKeyboardDidShow === void 0 ? void 0 : susbcriptionKeyboardDidShow.remove) === 'function') {\n        susbcriptionKeyboardDidShow.remove();\n      } else {\n        Keyboard.removeListener('keyboardDidShow', onKeyboardDidShow);\n      }\n      if (typeof (susbcriptionKeyboardDidHide === null || susbcriptionKeyboardDidHide === void 0 ? void 0 : susbcriptionKeyboardDidHide.remove) === 'function') {\n        susbcriptionKeyboardDidHide.remove();\n      } else {\n        Keyboard.removeListener('keyboardDidHide', onKeyboardDidHide);\n      }\n    };\n  }, [onKeyboardDidHide, onKeyboardDidShow]);\n  useEffect(function () {\n    getValue();\n  }, [getValue, value]);\n  var showOrClose = useCallback(function () {\n    if (!disable) {\n      _measure();\n      setVisible(!visible);\n      setListData(data);\n      if (!visible) {\n        if (onFocus) {\n          onFocus();\n        }\n      } else {\n        if (onBlur) {\n          onBlur();\n        }\n      }\n    }\n  }, [_measure, data, disable, onBlur, onFocus, visible]);\n  var onSearch = useCallback(function (text) {\n    if (text.length > 0) {\n      var defaultFilterFunction = function defaultFilterFunction(e) {\n        var _$get;\n        var item = (_$get = _.get(e, labelField)) === null || _$get === void 0 ? void 0 : _$get.toLowerCase().replace(' ', '').normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n        var key = text.toLowerCase().replace(' ', '').normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n        return item.indexOf(key) >= 0;\n      };\n      var propSearchFunction = function propSearchFunction(e) {\n        var labelText = _.get(e, labelField);\n        return searchQuery === null || searchQuery === void 0 ? void 0 : searchQuery(text, labelText);\n      };\n      var dataSearch = data.filter(searchQuery ? propSearchFunction : defaultFilterFunction);\n      setListData(dataSearch);\n    } else {\n      setListData(data);\n    }\n  }, [data, labelField, searchQuery]);\n  var onSelect = useCallback(function (item) {\n    var newCurrentValue = _toConsumableArray(currentValue);\n    var index = newCurrentValue.findIndex(function (e) {\n      return e === _.get(item, valueField);\n    });\n    if (index > -1) {\n      newCurrentValue.splice(index, 1);\n    } else {\n      if (maxSelect) {\n        if (newCurrentValue.length < maxSelect) {\n          newCurrentValue.push(_.get(item, valueField));\n        }\n      } else {\n        newCurrentValue.push(_.get(item, valueField));\n      }\n    }\n    if (onConfirmSelectItem) {\n      if (index > -1) {\n        if (confirmUnSelectItem) {\n          onConfirmSelectItem(newCurrentValue);\n        } else {\n          onChange(newCurrentValue);\n        }\n      } else {\n        if (confirmSelectItem) {\n          onConfirmSelectItem(newCurrentValue);\n        } else {\n          onChange(newCurrentValue);\n        }\n      }\n    } else {\n      onChange(newCurrentValue);\n    }\n    setKey(Math.random());\n  }, [confirmSelectItem, confirmUnSelectItem, currentValue, maxSelect, onChange, onConfirmSelectItem, valueField]);\n  var _renderDropdown = function _renderDropdown() {\n    return React.createElement(TouchableWithoutFeedback, {\n      testID: testID,\n      accessible: !!accessibilityLabel,\n      accessibilityLabel: accessibilityLabel,\n      onPress: showOrClose\n    }, React.createElement(View, {\n      style: styles.dropdown\n    }, renderLeftIcon === null || renderLeftIcon === void 0 ? void 0 : renderLeftIcon(), React.createElement(Text, {\n      style: StyleSheet.flatten([styles.textItem, placeholderStyle, font()])\n    }, placeholder), renderRightIcon ? renderRightIcon() : React.createElement(Image, {\n      source: ic_down,\n      style: StyleSheet.flatten([styles.icon, {\n        tintColor: iconColor\n      }, iconStyle])\n    })));\n  };\n  var checkSelected = useCallback(function (item) {\n    var index = currentValue.findIndex(function (e) {\n      return e === _.get(item, valueField);\n    });\n    return index > -1;\n  }, [currentValue, valueField]);\n  var _renderItem = useCallback(function (_ref) {\n    var item = _ref.item,\n      index = _ref.index;\n    var selected = checkSelected(item);\n    _.assign(item, {\n      _index: index\n    });\n    return React.createElement(TouchableHighlight, {\n      key: index.toString(),\n      testID: _.get(item, itemTestIDField || labelField),\n      accessible: !!accessibilityLabel,\n      accessibilityLabel: _.get(item, itemAccessibilityLabelField || labelField),\n      underlayColor: activeColor,\n      onPress: function onPress() {\n        return onSelect(item);\n      }\n    }, React.createElement(View, {\n      style: StyleSheet.flatten([itemContainerStyle, selected && _objectSpread({\n        backgroundColor: activeColor\n      }, styles.wrapItem)])\n    }, renderItem ? renderItem(item, selected) : React.createElement(View, {\n      style: styles.item\n    }, React.createElement(Text, {\n      style: StyleSheet.flatten([styles.textItem, itemTextStyle, font()])\n    }, _.get(item, labelField)))));\n  }, [accessibilityLabel, activeColor, checkSelected, font, itemAccessibilityLabelField, itemContainerStyle, itemTestIDField, itemTextStyle, labelField, onSelect, renderItem]);\n  var renderSearch = useCallback(function () {\n    if (search) {\n      if (renderInputSearch) {\n        return renderInputSearch(function (text) {\n          if (_onChangeText) {\n            setSearchText(text);\n            _onChangeText(text);\n          }\n          onSearch(text);\n        });\n      } else {\n        return React.createElement(CInput, {\n          testID: testID + ' input',\n          accessibilityLabel: accessibilityLabel + ' input',\n          style: [styles.input, inputSearchStyle],\n          inputStyle: [inputSearchStyle, font()],\n          autoCorrect: false,\n          placeholder: searchPlaceholder,\n          onChangeText: function onChangeText(e) {\n            if (_onChangeText) {\n              setSearchText(e);\n              _onChangeText(e);\n            }\n            onSearch(e);\n          },\n          placeholderTextColor: \"gray\",\n          iconStyle: [{\n            tintColor: iconColor\n          }, iconStyle],\n          onFocus: function onFocus() {\n            return setFocus(true);\n          },\n          onBlur: function onBlur() {\n            setFocus(false);\n          }\n        });\n      }\n    }\n    return null;\n  }, [accessibilityLabel, font, iconColor, iconStyle, inputSearchStyle, _onChangeText, onSearch, renderInputSearch, search, searchPlaceholder, testID]);\n  var _renderListTop = useCallback(function () {\n    return React.createElement(TouchableWithoutFeedback, null, React.createElement(View, {\n      style: styles.flexShrink\n    }, React.createElement(FlatList, _extends({\n      testID: testID + ' flatlist',\n      accessibilityLabel: accessibilityLabel + ' flatlist'\n    }, flatListProps, {\n      keyboardShouldPersistTaps: \"handled\",\n      data: listData,\n      inverted: true,\n      renderItem: _renderItem,\n      keyExtractor: function keyExtractor(_item, index) {\n        return index.toString();\n      },\n      showsVerticalScrollIndicator: showsVerticalScrollIndicator\n    })), renderSearch()));\n  }, [_renderItem, accessibilityLabel, flatListProps, listData, renderSearch, showsVerticalScrollIndicator, testID]);\n  var _renderListBottom = useCallback(function () {\n    return React.createElement(TouchableWithoutFeedback, null, React.createElement(View, {\n      style: styles.flexShrink\n    }, renderSearch(), React.createElement(FlatList, _extends({\n      testID: testID + ' flatlist',\n      accessibilityLabel: testID + ' flatlist'\n    }, flatListProps, {\n      keyboardShouldPersistTaps: \"handled\",\n      data: listData,\n      renderItem: _renderItem,\n      keyExtractor: function keyExtractor(_item, index) {\n        return index.toString();\n      },\n      showsVerticalScrollIndicator: showsVerticalScrollIndicator\n    }))));\n  }, [_renderItem, flatListProps, listData, renderSearch, showsVerticalScrollIndicator, testID]);\n  var _renderModal = useCallback(function () {\n    if (visible && position) {\n      var isFull = position.isFull,\n        w = position.w,\n        top = position.top,\n        bottom = position.bottom,\n        left = position.left,\n        height = position.height;\n      if (w && top && bottom) {\n        var styleVertical = {\n          left: left,\n          maxHeight: maxHeight\n        };\n        var isTopPosition = dropdownPosition === 'auto' ? bottom < (isIOS ? 200 : search ? 310 : 300) : dropdownPosition === 'top' ? true : false;\n        var topHeight = isTopPosition ? top - height : top;\n        var keyboardStyle = {};\n        if (keyboardAvoiding) {\n          if (renderInputSearch) {\n            if (keyboardHeight > 0 && bottom < keyboardHeight + height) {\n              if (isTopPosition) {\n                topHeight = H - keyboardHeight;\n              } else {\n                keyboardStyle = {\n                  backgroundColor: 'rgba(0,0,0,0.1)'\n                };\n                topHeight = H - keyboardHeight - 55;\n              }\n            }\n          } else {\n            if (focus && keyboardHeight > 0 && bottom < keyboardHeight + height) {\n              if (isTopPosition) {\n                topHeight = H - keyboardHeight;\n              } else {\n                keyboardStyle = {\n                  backgroundColor: 'rgba(0,0,0,0.1)'\n                };\n                topHeight = H - keyboardHeight - 55;\n              }\n            }\n          }\n        }\n        return React.createElement(Modal, {\n          transparent: true,\n          statusBarTranslucent: statusBarIsTranslucent,\n          visible: visible,\n          supportedOrientations: ['landscape', 'portrait'],\n          onRequestClose: showOrClose\n        }, React.createElement(TouchableWithoutFeedback, {\n          onPress: showOrClose\n        }, React.createElement(View, {\n          style: StyleSheet.flatten([styles.flex1, isFull && styleContainerVertical, backgroundColor && {\n            backgroundColor: backgroundColor\n          }, keyboardStyle])\n        }, React.createElement(View, {\n          style: StyleSheet.flatten([styles.wrapTop, {\n            height: topHeight,\n            width: w\n          }])\n        }, isTopPosition && React.createElement(View, {\n          style: StyleSheet.flatten([{\n            width: w\n          }, styles.container, containerStyle, isFull ? styleHorizontal : styleVertical])\n        }, _renderListTop())), React.createElement(View, {\n          style: styles.flex1\n        }, !isTopPosition && React.createElement(View, {\n          style: StyleSheet.flatten([{\n            width: w\n          }, styles.container, containerStyle, isFull ? styleHorizontal : styleVertical])\n        }, _renderListBottom())))));\n      }\n      return null;\n    }\n    return null;\n  }, [visible, position, maxHeight, dropdownPosition, search, keyboardAvoiding, statusBarIsTranslucent, showOrClose, styleContainerVertical, backgroundColor, containerStyle, styleHorizontal, _renderListTop, _renderListBottom, renderInputSearch, keyboardHeight, H, focus]);\n  var unSelect = function unSelect(item) {\n    if (!disable) {\n      onSelect(item);\n    }\n  };\n  var _renderItemSelected = function _renderItemSelected(inside) {\n    var list = data.filter(function (e) {\n      var check = value === null || value === void 0 ? void 0 : value.indexOf(_.get(e, valueField));\n      if (check !== -1) {\n        return e;\n      }\n    });\n    return React.createElement(View, {\n      style: StyleSheet.flatten([styles.rowSelectedItem, inside && styles.flex1])\n    }, list.map(function (e) {\n      if (renderSelectedItem) {\n        return React.createElement(TouchableWithoutFeedback, {\n          testID: _.get(e, itemTestIDField || labelField),\n          accessible: !!accessibilityLabel,\n          accessibilityLabel: _.get(e, itemAccessibilityLabelField || labelField),\n          key: _.get(e, labelField),\n          onPress: function onPress() {\n            return unSelect(e);\n          }\n        }, renderSelectedItem(e, function () {\n          unSelect(e);\n        }));\n      } else {\n        return React.createElement(TouchableWithoutFeedback, {\n          testID: _.get(e, itemTestIDField || labelField),\n          accessible: !!accessibilityLabel,\n          accessibilityLabel: _.get(e, itemAccessibilityLabelField || labelField),\n          key: _.get(e, labelField),\n          onPress: function onPress() {\n            return unSelect(e);\n          }\n        }, React.createElement(View, {\n          style: StyleSheet.flatten([styles.selectedItem, selectedStyle])\n        }, React.createElement(Text, {\n          style: StyleSheet.flatten([styles.selectedTextLeftItem, selectedTextStyle, font()])\n        }, _.get(e, labelField)), React.createElement(Text, {\n          style: StyleSheet.flatten([styles.selectedTextItem, selectedTextStyle])\n        }, \"\\u24E7\")));\n      }\n    }));\n  };\n  var _renderInside = function _renderInside() {\n    return React.createElement(View, {\n      style: StyleSheet.flatten([styles.mainWrap, style]),\n      ref: ref,\n      onLayout: _measure\n    }, _renderDropdownInside(), _renderModal());\n  };\n  var _renderDropdownInside = function _renderDropdownInside() {\n    return React.createElement(TouchableWithoutFeedback, {\n      testID: testID,\n      accessible: !!accessibilityLabel,\n      accessibilityLabel: accessibilityLabel,\n      onPress: showOrClose\n    }, React.createElement(View, {\n      style: styles.dropdownInside\n    }, renderLeftIcon === null || renderLeftIcon === void 0 ? void 0 : renderLeftIcon(), value && (value === null || value === void 0 ? void 0 : value.length) > 0 ? _renderItemSelected(true) : React.createElement(Text, {\n      style: StyleSheet.flatten([styles.textItem, placeholderStyle, font()])\n    }, placeholder), renderRightIcon ? renderRightIcon() : React.createElement(Image, {\n      source: ic_down,\n      style: StyleSheet.flatten([styles.icon, {\n        tintColor: iconColor\n      }, iconStyle])\n    })));\n  };\n  if (inside) {\n    return _renderInside();\n  }\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: StyleSheet.flatten([styles.mainWrap, style]),\n    ref: ref,\n    onLayout: _measure\n  }, _renderDropdown(), _renderModal()), (!visible || alwaysRenderSelectedItem) && visibleSelectedItem && _renderItemSelected(false));\n});\nMultiSelectComponent.defaultProps = defaultProps;\nexport default MultiSelectComponent;","map":{"version":3,"mappings":"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","names":["React","useCallback","useEffect","useImperativeHandle","useMemo","useRef","useState","CInput","useDeviceOrientation","useDetectDevice","styles","_","isTablet","isIOS","ic_down","require","defaultProps","placeholder","activeColor","data","style","MultiSelectComponent","forwardRef","props","currentRef","orientation","testID","itemTestIDField","onChange","value","labelField","valueField","selectedStyle","selectedTextStyle","itemContainerStyle","itemTextStyle","iconStyle","containerStyle","fontFamily","placeholderStyle","iconColor","inputSearchStyle","searchPlaceholder","search","maxHeight","maxSelect","disable","keyboardAvoiding","inside","renderItem","renderLeftIcon","renderRightIcon","renderSelectedItem","renderInputSearch","onFocus","onBlur","showsVerticalScrollIndicator","dropdownPosition","flatListProps","alwaysRenderSelectedItem","searchQuery","statusBarIsTranslucent","backgroundColor","onChangeText","confirmSelectItem","confirmUnSelectItem","onConfirmSelectItem","accessibilityLabel","itemAccessibilityLabelField","visibleSelectedItem","ref","visible","setVisible","currentValue","setCurrentValue","listData","setListData","Math","random","setKey","position","setPosition","focus","setFocus","keyboardHeight","setKeyboardHeight","searchText","setSearchText","Dimensions","get","W","width","H","height","styleContainerVertical","alignItems","styleHorizontal","marginBottom","alignSelf","open","eventOpen","close","eventClose","onSearch","font","getValue","_measure","current","measure","_width","_height","px","py","fx","fy","isFull","w","floor","top","bottom","left","I18nManager","isRTL","onKeyboardDidShow","e","endCoordinates","onKeyboardDidHide","susbcriptionKeyboardDidShow","Keyboard","addListener","susbcriptionKeyboardDidHide","remove","removeListener","showOrClose","text","length","defaultFilterFunction","item","_$get","toLowerCase","replace","normalize","key","indexOf","propSearchFunction","labelText","dataSearch","filter","onSelect","newCurrentValue","index","findIndex","splice","push","_renderDropdown","TouchableWithoutFeedback","accessible","onPress","View","dropdown","Text","StyleSheet","flatten","textItem","Image","source","icon","tintColor","checkSelected","_renderItem","_ref","selected","assign","_index","TouchableHighlight","toString","underlayColor","wrapItem","renderSearch","input","inputStyle","autoCorrect","placeholderTextColor","_renderListTop","flexShrink","FlatList","keyboardShouldPersistTaps","inverted","keyExtractor","_item","_renderListBottom","_renderModal","styleVertical","isTopPosition","topHeight","keyboardStyle","Modal","transparent","statusBarTranslucent","supportedOrientations","onRequestClose","flex1","wrapTop","container","unSelect","_renderItemSelected","list","check","rowSelectedItem","map","selectedItem","selectedTextLeftItem","selectedTextItem","_renderInside","mainWrap","onLayout","_renderDropdownInside","dropdownInside"],"sources":["index.tsx"],"sourcesContent":["import React, {\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Keyboard,\n  Modal,\n  Text,\n  TouchableWithoutFeedback,\n  TouchableHighlight,\n  View,\n  ViewStyle,\n  KeyboardEvent,\n  I18nManager,\n  StyleSheet,\n} from 'react-native';\nimport CInput from '../TextInput';\nimport { useDeviceOrientation } from '../../useDeviceOrientation';\nimport { useDetectDevice } from '../../toolkits';\nimport { styles } from './styles';\nimport type { MultiSelectProps } from './model';\nimport _ from 'lodash';\n\nconst { isTablet, isIOS } = useDetectDevice;\nconst ic_down = require('../../assets/down.png');\n\nconst defaultProps = {\n  placeholder: 'Select item',\n  activeColor: '#F6F7F8',\n  data: [],\n  style: {},\n};\n\nconst MultiSelectComponent = React.forwardRef<any, MultiSelectProps>(\n  (props, currentRef) => {\n    const orientation = useDeviceOrientation();\n    const {\n      testID,\n      itemTestIDField,\n      onChange,\n      data,\n      value,\n      style,\n      labelField,\n      valueField,\n      selectedStyle,\n      selectedTextStyle,\n      itemContainerStyle,\n      itemTextStyle,\n      iconStyle,\n      activeColor,\n      containerStyle,\n      fontFamily,\n      placeholderStyle,\n      iconColor = 'gray',\n      inputSearchStyle,\n      searchPlaceholder,\n      placeholder,\n      search = false,\n      maxHeight = 340,\n      maxSelect,\n      disable = false,\n      keyboardAvoiding = true,\n      inside = false,\n      renderItem,\n      renderLeftIcon,\n      renderRightIcon,\n      renderSelectedItem,\n      renderInputSearch,\n      onFocus,\n      onBlur,\n      showsVerticalScrollIndicator = true,\n      dropdownPosition = 'auto',\n      flatListProps,\n      alwaysRenderSelectedItem = false,\n      searchQuery,\n      statusBarIsTranslucent,\n      backgroundColor,\n      onChangeText,\n      confirmSelectItem,\n      confirmUnSelectItem,\n      onConfirmSelectItem,\n      accessibilityLabel,\n      itemAccessibilityLabelField,\n      visibleSelectedItem = true,\n    } = props;\n\n    const ref = useRef<View>(null);\n    const [visible, setVisible] = useState<boolean>(false);\n    const [currentValue, setCurrentValue] = useState<any[]>([]);\n    const [listData, setListData] = useState<any[]>(data);\n    const [, setKey] = useState<number>(Math.random());\n    const [position, setPosition] = useState<any>();\n    const [focus, setFocus] = useState<boolean>(false);\n    const [keyboardHeight, setKeyboardHeight] = useState<number>(0);\n    const [searchText, setSearchText] = useState('');\n\n    const { width: W, height: H } = Dimensions.get('window');\n    const styleContainerVertical: ViewStyle = useMemo(() => {\n      return {\n        backgroundColor: 'rgba(0,0,0,0.1)',\n        alignItems: 'center',\n      };\n    }, []);\n    const styleHorizontal: ViewStyle = useMemo(() => {\n      return { marginBottom: 20, width: W / 2, alignSelf: 'center' };\n    }, [W]);\n\n    useImperativeHandle(currentRef, () => {\n      return { open: eventOpen, close: eventClose };\n    });\n\n    useEffect(() => {\n      setListData([...data]);\n      if (searchText) {\n        onSearch(searchText);\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [data, searchText]);\n\n    const eventOpen = () => {\n      if (!disable) {\n        setVisible(true);\n        if (onFocus) {\n          onFocus();\n        }\n      }\n    };\n\n    const eventClose = () => {\n      if (!disable) {\n        setVisible(false);\n        if (onBlur) {\n          onBlur();\n        }\n      }\n    };\n\n    const font = useCallback(() => {\n      if (fontFamily) {\n        return {\n          fontFamily: fontFamily,\n        };\n      } else {\n        return {};\n      }\n    }, [fontFamily]);\n\n    const getValue = useCallback(() => {\n      setCurrentValue(value ? [...value] : []);\n    }, [value]);\n\n    const _measure = useCallback(() => {\n      if (ref && ref?.current) {\n        ref.current.measure((_width, _height, px, py, fx, fy) => {\n          const isFull = orientation === 'LANDSCAPE' && !isTablet;\n          const w = Math.floor(px);\n          const top = isFull ? 20 : Math.floor(py) + Math.floor(fy) + 2;\n          const bottom = H - top;\n          const left = I18nManager.isRTL\n            ? W - Math.floor(px) - Math.floor(fx)\n            : Math.floor(fx);\n\n          setPosition({\n            isFull,\n            w,\n            top,\n            bottom: Math.floor(bottom),\n            left,\n            height: Math.floor(py),\n          });\n        });\n      }\n    }, [H, W, orientation]);\n\n    const onKeyboardDidShow = useCallback(\n      (e: KeyboardEvent) => {\n        _measure();\n        setKeyboardHeight(e.endCoordinates.height);\n      },\n      [_measure]\n    );\n\n    const onKeyboardDidHide = useCallback(() => {\n      setKeyboardHeight(0);\n      _measure();\n    }, [_measure]);\n\n    useEffect(() => {\n      const susbcriptionKeyboardDidShow = Keyboard.addListener(\n        'keyboardDidShow',\n        onKeyboardDidShow\n      );\n      const susbcriptionKeyboardDidHide = Keyboard.addListener(\n        'keyboardDidHide',\n        onKeyboardDidHide\n      );\n\n      return () => {\n        if (typeof susbcriptionKeyboardDidShow?.remove === 'function') {\n          susbcriptionKeyboardDidShow.remove();\n        } else {\n          Keyboard.removeListener('keyboardDidShow', onKeyboardDidShow);\n        }\n\n        if (typeof susbcriptionKeyboardDidHide?.remove === 'function') {\n          susbcriptionKeyboardDidHide.remove();\n        } else {\n          Keyboard.removeListener('keyboardDidHide', onKeyboardDidHide);\n        }\n      };\n    }, [onKeyboardDidHide, onKeyboardDidShow]);\n\n    useEffect(() => {\n      getValue();\n    }, [getValue, value]);\n\n    const showOrClose = useCallback(() => {\n      if (!disable) {\n        _measure();\n        setVisible(!visible);\n        setListData(data);\n\n        if (!visible) {\n          if (onFocus) {\n            onFocus();\n          }\n        } else {\n          if (onBlur) {\n            onBlur();\n          }\n        }\n      }\n    }, [_measure, data, disable, onBlur, onFocus, visible]);\n\n    const onSearch = useCallback(\n      (text: string) => {\n        if (text.length > 0) {\n          const defaultFilterFunction = (e: any) => {\n            const item = _.get(e, labelField)\n              ?.toLowerCase()\n              .replace(' ', '')\n              .normalize('NFD')\n              .replace(/[\\u0300-\\u036f]/g, '');\n            const key = text\n              .toLowerCase()\n              .replace(' ', '')\n              .normalize('NFD')\n              .replace(/[\\u0300-\\u036f]/g, '');\n\n            return item.indexOf(key) >= 0;\n          };\n\n          const propSearchFunction = (e: any) => {\n            const labelText = _.get(e, labelField);\n\n            return searchQuery?.(text, labelText);\n          };\n\n          const dataSearch = data.filter(\n            searchQuery ? propSearchFunction : defaultFilterFunction\n          );\n          setListData(dataSearch);\n        } else {\n          setListData(data);\n        }\n      },\n      [data, labelField, searchQuery]\n    );\n\n    const onSelect = useCallback(\n      (item: any) => {\n        const newCurrentValue = [...currentValue];\n        const index = newCurrentValue.findIndex(\n          (e) => e === _.get(item, valueField)\n        );\n        if (index > -1) {\n          newCurrentValue.splice(index, 1);\n        } else {\n          if (maxSelect) {\n            if (newCurrentValue.length < maxSelect) {\n              newCurrentValue.push(_.get(item, valueField));\n            }\n          } else {\n            newCurrentValue.push(_.get(item, valueField));\n          }\n        }\n\n        if (onConfirmSelectItem) {\n          if (index > -1) {\n            if (confirmUnSelectItem) {\n              onConfirmSelectItem(newCurrentValue);\n            } else {\n              onChange(newCurrentValue);\n            }\n          } else {\n            if (confirmSelectItem) {\n              onConfirmSelectItem(newCurrentValue);\n            } else {\n              onChange(newCurrentValue);\n            }\n          }\n        } else {\n          onChange(newCurrentValue);\n        }\n\n        setKey(Math.random());\n      },\n      [\n        confirmSelectItem,\n        confirmUnSelectItem,\n        currentValue,\n        maxSelect,\n        onChange,\n        onConfirmSelectItem,\n        valueField,\n      ]\n    );\n\n    const _renderDropdown = () => {\n      return (\n        <TouchableWithoutFeedback\n          testID={testID}\n          accessible={!!accessibilityLabel}\n          accessibilityLabel={accessibilityLabel}\n          onPress={showOrClose}\n        >\n          <View style={styles.dropdown}>\n            {renderLeftIcon?.()}\n            <Text\n              style={StyleSheet.flatten([\n                styles.textItem,\n                placeholderStyle,\n                font(),\n              ])}\n            >\n              {placeholder}\n            </Text>\n            {renderRightIcon ? (\n              renderRightIcon()\n            ) : (\n              <Image\n                source={ic_down}\n                style={StyleSheet.flatten([\n                  styles.icon,\n                  { tintColor: iconColor },\n                  iconStyle,\n                ])}\n              />\n            )}\n          </View>\n        </TouchableWithoutFeedback>\n      );\n    };\n\n    const checkSelected = useCallback(\n      (item: any) => {\n        const index = currentValue.findIndex(\n          (e) => e === _.get(item, valueField)\n        );\n        return index > -1;\n      },\n      [currentValue, valueField]\n    );\n\n    const _renderItem = useCallback(\n      ({ item, index }: { item: any; index: number }) => {\n        const selected = checkSelected(item);\n        _.assign(item, { _index: index });\n        return (\n          <TouchableHighlight\n            key={index.toString()}\n            testID={_.get(item, itemTestIDField || labelField)}\n            accessible={!!accessibilityLabel}\n            accessibilityLabel={_.get(\n              item,\n              itemAccessibilityLabelField || labelField\n            )}\n            underlayColor={activeColor}\n            onPress={() => onSelect(item)}\n          >\n            <View\n              style={StyleSheet.flatten([\n                itemContainerStyle,\n                selected && {\n                  backgroundColor: activeColor,\n                  ...styles.wrapItem,\n                },\n              ])}\n            >\n              {renderItem ? (\n                renderItem(item, selected)\n              ) : (\n                <View style={styles.item}>\n                  <Text\n                    style={StyleSheet.flatten([\n                      styles.textItem,\n                      itemTextStyle,\n                      font(),\n                    ])}\n                  >\n                    {_.get(item, labelField)}\n                  </Text>\n                </View>\n              )}\n            </View>\n          </TouchableHighlight>\n        );\n      },\n      [\n        accessibilityLabel,\n        activeColor,\n        checkSelected,\n        font,\n        itemAccessibilityLabelField,\n        itemContainerStyle,\n        itemTestIDField,\n        itemTextStyle,\n        labelField,\n        onSelect,\n        renderItem,\n      ]\n    );\n\n    const renderSearch = useCallback(() => {\n      if (search) {\n        if (renderInputSearch) {\n          return renderInputSearch((text) => {\n            if (onChangeText) {\n              setSearchText(text);\n              onChangeText(text);\n            }\n            onSearch(text);\n          });\n        } else {\n          return (\n            <CInput\n              testID={testID + ' input'}\n              accessibilityLabel={accessibilityLabel + ' input'}\n              style={[styles.input, inputSearchStyle]}\n              inputStyle={[inputSearchStyle, font()]}\n              autoCorrect={false}\n              placeholder={searchPlaceholder}\n              onChangeText={(e) => {\n                if (onChangeText) {\n                  setSearchText(e);\n                  onChangeText(e);\n                }\n                onSearch(e);\n              }}\n              placeholderTextColor=\"gray\"\n              iconStyle={[{ tintColor: iconColor }, iconStyle]}\n              onFocus={() => setFocus(true)}\n              onBlur={() => {\n                setFocus(false);\n              }}\n            />\n          );\n        }\n      }\n      return null;\n    }, [\n      accessibilityLabel,\n      font,\n      iconColor,\n      iconStyle,\n      inputSearchStyle,\n      onChangeText,\n      onSearch,\n      renderInputSearch,\n      search,\n      searchPlaceholder,\n      testID,\n    ]);\n\n    const _renderListTop = useCallback(() => {\n      return (\n        <TouchableWithoutFeedback>\n          <View style={styles.flexShrink}>\n            <FlatList\n              testID={testID + ' flatlist'}\n              accessibilityLabel={accessibilityLabel + ' flatlist'}\n              {...flatListProps}\n              keyboardShouldPersistTaps=\"handled\"\n              data={listData}\n              inverted\n              renderItem={_renderItem}\n              keyExtractor={(_item, index) => index.toString()}\n              showsVerticalScrollIndicator={showsVerticalScrollIndicator}\n            />\n            {renderSearch()}\n          </View>\n        </TouchableWithoutFeedback>\n      );\n    }, [\n      _renderItem,\n      accessibilityLabel,\n      flatListProps,\n      listData,\n      renderSearch,\n      showsVerticalScrollIndicator,\n      testID,\n    ]);\n\n    const _renderListBottom = useCallback(() => {\n      return (\n        <TouchableWithoutFeedback>\n          <View style={styles.flexShrink}>\n            {renderSearch()}\n            <FlatList\n              testID={testID + ' flatlist'}\n              accessibilityLabel={testID + ' flatlist'}\n              {...flatListProps}\n              keyboardShouldPersistTaps=\"handled\"\n              data={listData}\n              renderItem={_renderItem}\n              keyExtractor={(_item, index) => index.toString()}\n              showsVerticalScrollIndicator={showsVerticalScrollIndicator}\n            />\n          </View>\n        </TouchableWithoutFeedback>\n      );\n    }, [\n      _renderItem,\n      flatListProps,\n      listData,\n      renderSearch,\n      showsVerticalScrollIndicator,\n      testID,\n    ]);\n\n    const _renderModal = useCallback(() => {\n      if (visible && position) {\n        const { isFull, w, top, bottom, left, height } = position;\n        if (w && top && bottom) {\n          const styleVertical: ViewStyle = { left: left, maxHeight: maxHeight };\n          const isTopPosition =\n            dropdownPosition === 'auto'\n              ? bottom < (isIOS ? 200 : search ? 310 : 300)\n              : dropdownPosition === 'top'\n              ? true\n              : false;\n          let topHeight = isTopPosition ? top - height : top;\n\n          let keyboardStyle: ViewStyle = {};\n          if (keyboardAvoiding) {\n            if (renderInputSearch) {\n              if (keyboardHeight > 0 && bottom < keyboardHeight + height) {\n                if (isTopPosition) {\n                  topHeight = H - keyboardHeight;\n                } else {\n                  keyboardStyle = { backgroundColor: 'rgba(0,0,0,0.1)' };\n                  topHeight = H - keyboardHeight - 55;\n                }\n              }\n            } else {\n              if (\n                focus &&\n                keyboardHeight > 0 &&\n                bottom < keyboardHeight + height\n              ) {\n                if (isTopPosition) {\n                  topHeight = H - keyboardHeight;\n                } else {\n                  keyboardStyle = { backgroundColor: 'rgba(0,0,0,0.1)' };\n                  topHeight = H - keyboardHeight - 55;\n                }\n              }\n            }\n          }\n\n          return (\n            <Modal\n              transparent\n              statusBarTranslucent={statusBarIsTranslucent}\n              visible={visible}\n              supportedOrientations={['landscape', 'portrait']}\n              onRequestClose={showOrClose}\n            >\n              <TouchableWithoutFeedback onPress={showOrClose}>\n                <View\n                  style={StyleSheet.flatten([\n                    styles.flex1,\n                    isFull && styleContainerVertical,\n                    backgroundColor && { backgroundColor: backgroundColor },\n                    keyboardStyle,\n                  ])}\n                >\n                  <View\n                    style={StyleSheet.flatten([\n                      styles.wrapTop,\n                      {\n                        height: topHeight,\n                        width: w,\n                      },\n                    ])}\n                  >\n                    {isTopPosition && (\n                      <View\n                        style={StyleSheet.flatten([\n                          { width: w },\n                          styles.container,\n                          containerStyle,\n                          isFull ? styleHorizontal : styleVertical,\n                        ])}\n                      >\n                        {_renderListTop()}\n                      </View>\n                    )}\n                  </View>\n                  <View style={styles.flex1}>\n                    {!isTopPosition && (\n                      <View\n                        style={StyleSheet.flatten([\n                          { width: w },\n                          styles.container,\n                          containerStyle,\n                          isFull ? styleHorizontal : styleVertical,\n                        ])}\n                      >\n                        {_renderListBottom()}\n                      </View>\n                    )}\n                  </View>\n                </View>\n              </TouchableWithoutFeedback>\n            </Modal>\n          );\n        }\n        return null;\n      }\n      return null;\n    }, [\n      visible,\n      position,\n      maxHeight,\n      dropdownPosition,\n      search,\n      keyboardAvoiding,\n      statusBarIsTranslucent,\n      showOrClose,\n      styleContainerVertical,\n      backgroundColor,\n      containerStyle,\n      styleHorizontal,\n      _renderListTop,\n      _renderListBottom,\n      renderInputSearch,\n      keyboardHeight,\n      H,\n      focus,\n    ]);\n\n    const unSelect = (item: any) => {\n      if (!disable) {\n        onSelect(item);\n      }\n    };\n\n    // eslint-disable-next-line no-shadow\n    const _renderItemSelected = (inside: boolean) => {\n      const list = data.filter((e: any) => {\n        const check = value?.indexOf(_.get(e, valueField));\n        if (check !== -1) {\n          return e;\n        }\n      });\n\n      return (\n        <View\n          style={StyleSheet.flatten([\n            styles.rowSelectedItem,\n            inside && styles.flex1,\n          ])}\n        >\n          {list.map((e) => {\n            if (renderSelectedItem) {\n              return (\n                <TouchableWithoutFeedback\n                  testID={_.get(e, itemTestIDField || labelField)}\n                  accessible={!!accessibilityLabel}\n                  accessibilityLabel={_.get(\n                    e,\n                    itemAccessibilityLabelField || labelField\n                  )}\n                  key={_.get(e, labelField)}\n                  onPress={() => unSelect(e)}\n                >\n                  {renderSelectedItem(e, () => {\n                    unSelect(e);\n                  })}\n                </TouchableWithoutFeedback>\n              );\n            } else {\n              return (\n                <TouchableWithoutFeedback\n                  testID={_.get(e, itemTestIDField || labelField)}\n                  accessible={!!accessibilityLabel}\n                  accessibilityLabel={_.get(\n                    e,\n                    itemAccessibilityLabelField || labelField\n                  )}\n                  key={_.get(e, labelField)}\n                  onPress={() => unSelect(e)}\n                >\n                  <View\n                    style={StyleSheet.flatten([\n                      styles.selectedItem,\n                      selectedStyle,\n                    ])}\n                  >\n                    <Text\n                      style={StyleSheet.flatten([\n                        styles.selectedTextLeftItem,\n                        selectedTextStyle,\n                        font(),\n                      ])}\n                    >\n                      {_.get(e, labelField)}\n                    </Text>\n                    <Text\n                      style={StyleSheet.flatten([\n                        styles.selectedTextItem,\n                        selectedTextStyle,\n                      ])}\n                    >\n                      ⓧ\n                    </Text>\n                  </View>\n                </TouchableWithoutFeedback>\n              );\n            }\n          })}\n        </View>\n      );\n    };\n\n    const _renderInside = () => {\n      return (\n        <View\n          style={StyleSheet.flatten([styles.mainWrap, style])}\n          ref={ref}\n          onLayout={_measure}\n        >\n          {_renderDropdownInside()}\n          {_renderModal()}\n        </View>\n      );\n    };\n\n    const _renderDropdownInside = () => {\n      return (\n        <TouchableWithoutFeedback\n          testID={testID}\n          accessible={!!accessibilityLabel}\n          accessibilityLabel={accessibilityLabel}\n          onPress={showOrClose}\n        >\n          <View style={styles.dropdownInside}>\n            {renderLeftIcon?.()}\n            {value && value?.length > 0 ? (\n              _renderItemSelected(true)\n            ) : (\n              <Text\n                style={StyleSheet.flatten([\n                  styles.textItem,\n                  placeholderStyle,\n                  font(),\n                ])}\n              >\n                {placeholder}\n              </Text>\n            )}\n            {renderRightIcon ? (\n              renderRightIcon()\n            ) : (\n              <Image\n                source={ic_down}\n                style={StyleSheet.flatten([\n                  styles.icon,\n                  { tintColor: iconColor },\n                  iconStyle,\n                ])}\n              />\n            )}\n          </View>\n        </TouchableWithoutFeedback>\n      );\n    };\n\n    if (inside) {\n      return _renderInside();\n    }\n\n    return (\n      <>\n        <View\n          style={StyleSheet.flatten([styles.mainWrap, style])}\n          ref={ref}\n          onLayout={_measure}\n        >\n          {_renderDropdown()}\n          {_renderModal()}\n        </View>\n        {(!visible || alwaysRenderSelectedItem) &&\n          visibleSelectedItem &&\n          _renderItemSelected(false)}\n      </>\n    );\n  }\n);\n\nMultiSelectComponent.defaultProps = defaultProps;\n\nexport default MultiSelectComponent;\n"]},"metadata":{},"sourceType":"module"}