{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport axios from 'axios';\nimport LottieView from 'lottie-react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { EVENTS } from \"../data/eventData\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar ScanTicketScreen = function ScanTicketScreen() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    hasPermission = _useState2[0],\n    setHasPermission = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    scanned = _useState4[0],\n    setScanned = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    showAnimation = _useState6[0],\n    setShowAnimation = _useState6[1];\n  useEffect(function () {\n    var getBarCodeScannerPermissions = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var _yield$BarCodeScanner = yield BarCodeScanner.requestPermissionsAsync(),\n          status = _yield$BarCodeScanner.status;\n        setHasPermission(status === 'granted');\n      });\n      return function getBarCodeScannerPermissions() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    getBarCodeScannerPermissions();\n  }, []);\n  var handleBarCodeScanned = function () {\n    var _ref3 = _asyncToGenerator(function* (_ref2) {\n      var type = _ref2.type,\n        data = _ref2.data;\n      setScanned(true);\n      alert(\"Bar code with type \" + type + \" and data \" + data + \" has been scanned!\");\n      console.log(data);\n    });\n    return function handleBarCodeScanned(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  if (hasPermission === null) {\n    return _jsx(Text, {\n      children: \"Requesting for camera permission\"\n    });\n  }\n  if (hasPermission === false) {\n    return _jsx(Text, {\n      children: \"No access to camera\"\n    });\n  }\n  return _jsxs(_Fragment, {\n    children: [_jsxs(View, {\n      style: styles.container,\n      children: [_jsx(BarCodeScanner, {\n        onBarCodeScanned: scanned ? undefined : handleBarCodeScanned,\n        style: StyleSheet.absoluteFillObject\n      }), scanned && _jsx(Text, {\n        style: {\n          fontFamily: \"Poppins3\",\n          fontSize: 18,\n          color: \"blue\",\n          position: \"absolute\",\n          bottom: 60,\n          alignSelf: \"center\"\n        },\n        onPress: function onPress() {\n          return setScanned(false);\n        },\n        children: \"Re-scan\"\n      })]\n    }), _jsx(View, {\n      style: {\n        height: 347,\n        width: 300,\n        backgroundColor: \"transparent\",\n        position: \"absolute\",\n        alignSelf: \"center\",\n        bottom: 80,\n        borderColor: \"white\",\n        borderRadius: 60,\n        borderWidth: 3\n      }\n    }), _jsx(View, {\n      style: styles.animation,\n      children: showAnimation && _jsx(LottieView, {\n        source: require(\"../assets/animations/qr-scan.json\"),\n        speed: 0.7,\n        autoPlay: true,\n        loop: false,\n        style: {\n          width: 100,\n          height: 100,\n          bottom: 280,\n          position: \"absolute\",\n          right: 10\n        },\n        onAnimationFinish: function onAnimationFinish() {\n          return setShowAnimation(false);\n        }\n      })\n    })]\n  });\n};\nexport default ScanTicketScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    height: height,\n    width: width,\n    alignSelf: \"center\",\n    top: 30\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","BarCodeScanner","axios","LottieView","TouchableOpacity","EVENTS","Dimensions","get","width","height","ScanTicketScreen","hasPermission","setHasPermission","scanned","setScanned","showAnimation","setShowAnimation","getBarCodeScannerPermissions","requestPermissionsAsync","status","handleBarCodeScanned","type","data","alert","console","log","styles","container","undefined","StyleSheet","absoluteFillObject","fontFamily","fontSize","color","position","bottom","alignSelf","backgroundColor","borderColor","borderRadius","borderWidth","animation","require","right","create","flex","top"],"sources":["C:/Users/STEPHEN/Desktop/busa_app1-main/screens/ScanTicketScreen.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Text, View, StyleSheet, Button, Dimensions } from 'react-native';\r\nimport { BarCodeScanner } from 'expo-barcode-scanner';\r\nimport axios from 'axios';\r\nimport LottieView from 'lottie-react-native';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport { EVENTS } from '../data/eventData';\r\nconst {width, height} = Dimensions.get(\"window\")\r\n\r\nconst ScanTicketScreen = () =>{\r\n  const [hasPermission, setHasPermission] = useState(null);\r\n  const [scanned, setScanned] = useState(false);\r\n  const [showAnimation, setShowAnimation] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getBarCodeScannerPermissions = async () => {\r\n      const { status } = await BarCodeScanner.requestPermissionsAsync();\r\n      setHasPermission(status === 'granted');\r\n    };\r\n\r\n    getBarCodeScannerPermissions();\r\n  }, []);\r\n\r\n  const handleBarCodeScanned = async ({ type, data }) => {\r\n  setScanned(true); // now you can scan\r\n\r\n  alert(`Bar code with type ${type} and data ${data} has been scanned!`);\r\n// setShowAnimation(true)\r\n  \r\nconsole.log(data)\r\n\r\n    // get the data from the qr code, send a post request to the backend with that data to verify it, if it's succesful\r\n    // show a small lottie view animation with sucess\r\n\r\n  \r\n\r\n//     if (userInfo?.scannedfor.toLowerCase() === data.event.title.toLowerCase()){\r\n//          await axios.post(\"....url present here\",{\r\n//                token:data.token\r\n//          }).then((res)=>{\r\n//           console.log(res)\r\n//           // if res is successful\r\n//   //alert(`QR code has been successfully scanned)\r\n// //      setShowAnimation(true)\r\n// setScanned(false)\r\n//          }).catch((e)=>{\r\n//           console.log(`${e}`)\r\n//          })\r\n//     }else{\r\n//       alert(\"This ticket is not for this event. Pls check another place\")\r\n//     }\r\n\r\n\r\n  };\r\n\r\n  if (hasPermission === null) {\r\n    return <Text>Requesting for camera permission</Text>;\r\n  }\r\n  if (hasPermission === false) {\r\n    return <Text>No access to camera</Text>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <View style={styles.container}>\r\n      \r\n      <BarCodeScanner\r\n      onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\r\n        style={StyleSheet.absoluteFillObject}\r\n      />\r\n      {/* {scanned && <Button title={'Tap to Scan Again'} onPress={() => setScanned(false)}/>} */}\r\n      \r\n      {scanned &&\r\n    <Text style={{fontFamily:\"Poppins3\", fontSize:18, color:\"blue\", position:\"absolute\", bottom:60, alignSelf:\"center\"}} onPress={()=>setScanned(false)}>Re-scan</Text>\r\n    }\r\n    </View>\r\n    <View style={{height:347, width:300, backgroundColor:\"transparent\", position:\"absolute\", alignSelf:\"center\", bottom:80, borderColor:\"white\", borderRadius:60, borderWidth:3 }}/>\r\n\r\n<View style={styles.animation}>\r\n{showAnimation && (\r\n  <LottieView\r\n   source={require(\"../assets/animations/qr-scan.json\")} \r\n   speed={0.7}\r\n   autoPlay\r\n   loop={false}\r\n   style={{width:100, height:100, bottom:280, position:\"absolute\", right:10}}\r\n  onAnimationFinish={()=> setShowAnimation(false)}\r\n  />\r\n)}\r\n\r\n</View>\r\n</>\r\n  );\r\n}\r\nexport default ScanTicketScreen\r\n\r\n\r\nconst styles = StyleSheet.create({\r\ncontainer:{\r\n  flex:1,\r\n  height:height,\r\n  width:width,\r\n  alignSelf:\"center\",\r\n  top:30\r\n}\r\n})\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}