{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { useImperativeHandle, useMemo, useRef } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dropdown from \"../Dropdown\";\nimport { styles } from \"./styles\";\nvar SelectCountryConponent = React.forwardRef(function (props, currentRef) {\n  var testID = props.testID,\n    itemTestIDField = props.itemTestIDField,\n    data = props.data,\n    value = props.value,\n    valueField = props.valueField,\n    labelField = props.labelField,\n    imageField = props.imageField,\n    selectedTextStyle = props.selectedTextStyle,\n    imageStyle = props.imageStyle;\n  var ref = useRef(null);\n  useImperativeHandle(currentRef, function () {\n    return {\n      open: eventOpen,\n      close: eventClose\n    };\n  });\n  var eventOpen = function eventOpen() {\n    ref.current.open();\n  };\n  var eventClose = function eventClose() {\n    ref.current.close();\n  };\n  var _renderItem = function _renderItem(item) {\n    return React.createElement(View, {\n      style: styles.item\n    }, React.createElement(Image, {\n      source: item[imageField],\n      style: [styles.image, imageStyle]\n    }), React.createElement(Text, {\n      style: [styles.selectedTextStyle, selectedTextStyle]\n    }, item[labelField]));\n  };\n  var selectItem = useMemo(function () {\n    var index = data.findIndex(function (e) {\n      return e[valueField] === value;\n    });\n    return data[index];\n  }, [data, valueField, value]);\n  return React.createElement(Dropdown, _extends({\n    testID: testID,\n    itemTestIDField: itemTestIDField,\n    ref: ref\n  }, props, {\n    renderItem: _renderItem,\n    renderLeftIcon: function renderLeftIcon() {\n      if (selectItem !== null && selectItem !== void 0 && selectItem.image) {\n        return React.createElement(Image, {\n          source: selectItem.image,\n          style: [styles.image, imageStyle]\n        });\n      } else {\n        return null;\n      }\n    }\n  }));\n});\nexport default SelectCountryConponent;","map":{"version":3,"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAK,IAAIC,mBAAmB,EAAEC,OAAO,EAAEC,MAAM,QAAQ,OAAO;AAAA;AAAA;AAAA;AAEnE,OAAOC,QAAQ;AAEf,SAASC,MAAM;AAEf,IAAMC,sBAAsB,GAAGN,KAAK,CAACO,UAAU,CAC7C,UAACC,KAAK,EAAEC,UAAU,EAAK;EACrB,IACEC,MAAM,GASJF,KAAK,CATPE,MAAM;IACNC,eAAe,GAQbH,KAAK,CARPG,eAAe;IACfC,IAAI,GAOFJ,KAAK,CAPPI,IAAI;IACJC,KAAK,GAMHL,KAAK,CANPK,KAAK;IACLC,UAAU,GAKRN,KAAK,CALPM,UAAU;IACVC,UAAU,GAIRP,KAAK,CAJPO,UAAU;IACVC,UAAU,GAGRR,KAAK,CAHPQ,UAAU;IACVC,iBAAiB,GAEfT,KAAK,CAFPS,iBAAiB;IACjBC,aACEV,KAAK,CADPU;EAEF,IAAMC,GAAQ,GAAGhB,MAAM,CAAC,IAAI,CAAC;EAE7BF,mBAAmB,CAACQ,UAAU,EAAE,YAAM;IACpC,OAAO;MAAEW,IAAI,EAAEC,SAAS;MAAEC,KAAK,EAAEC;IAAW,CAAC;EAC/C,CAAC,CAAC;EAEF,IAAMF,SAAS,GAAG,SAAZA,SAAS,GAAS;IACtBF,GAAG,CAACK,OAAO,CAACJ,IAAI,EAAE;EACpB,CAAC;EAED,IAAMG,UAAU,GAAG,SAAbA,UAAU,GAAS;IACvBJ,GAAG,CAACK,OAAO,CAACF,KAAK,EAAE;EACrB,CAAC;EAED,IAAMG,WAAW,GAAIC,SAAfD,WAAW,CAAIC,IAAS,EAAK;IACjC,OACE1B,oBAAC2B,IAAI;MAACC,KAAK,EAAEvB,MAAM,CAACqB;IAAK,GACvB1B,oBAAC6B,KAAK;MAACC,MAAM,EAAEJ,IAAI,CAACV,UAAU,CAAE;MAACY,KAAK,EAAE,CAACvB,MAAM,CAAC0B,KAAK,EAAEb,UAAU;IAAE,EAAG,EACtElB,oBAACgC,IAAI;MAACJ,KAAK,EAAE,CAACvB,MAAM,CAACY,iBAAiB,EAAEA,iBAAiB;IAAE,GACxDS,IAAI,CAACX,UAAU,CAAC,CACZ,CACF;EAEX,CAAC;EAED,IAAMkB,UAAU,GAAG/B,OAAO,CAAC,YAAM;IAC/B,IAAMgC,KAAK,GAAGtB,IAAI,CAACuB,SAAS,CAAEC,WAAC;MAAA,OAAKA,CAAC,CAACtB,UAAU,CAAC,KAAKD,KAAK;IAAA,EAAC;IAC5D,OAAOD,IAAI,CAACsB,KAAK,CAAC;EACpB,CAAC,EAAE,CAACtB,IAAI,EAAEE,UAAU,EAAED,KAAK,CAAC,CAAC;EAE7B,OACEb,oBAACI,QAAQ;IACPM,MAAM,EAAEA,MAAO;IACfC,eAAe,EAAEA,eAAgB;IACjCQ,GAAG,EAAEA;EAAI,GACLX,KAAK;IACT6B,UAAU,EAAEZ,WAAY;IACxBa,cAAc,EAAE,0BAAM;MACpB,IAAIL,UAAU,aAAVA,UAAU,eAAVA,UAAU,CAAEF,KAAK,EAAE;QACrB,OACE/B,oBAAC6B,KAAK;UACJC,MAAM,EAAEG,UAAU,CAACF,KAAM;UACzBH,KAAK,EAAE,CAACvB,MAAM,CAAC0B,KAAK,EAAEb,UAAU;QAAE,EAClC;MAEN,CAAC,MAAM;QACL,OAAO,IAAI;MACb;IACF;EAAE,GACF;AAEN,CAAC,CACF;AAED,eAAeZ,sBAAsB","names":["React","useImperativeHandle","useMemo","useRef","Dropdown","styles","SelectCountryConponent","forwardRef","props","currentRef","testID","itemTestIDField","data","value","valueField","labelField","imageField","selectedTextStyle","imageStyle","ref","open","eventOpen","close","eventClose","current","_renderItem","item","View","style","Image","source","image","Text","selectItem","index","findIndex","e","renderItem","renderLeftIcon"],"sources":["index.tsx"],"sourcesContent":["import React, { useImperativeHandle, useMemo, useRef } from 'react';\nimport { Image, View, Text } from 'react-native';\nimport Dropdown from '../Dropdown';\nimport type { SelectCountryProps } from './model';\nimport { styles } from './styles';\n\nconst SelectCountryConponent = React.forwardRef<any, SelectCountryProps>(\n  (props, currentRef) => {\n    const {\n      testID,\n      itemTestIDField,\n      data,\n      value,\n      valueField,\n      labelField,\n      imageField,\n      selectedTextStyle,\n      imageStyle,\n    } = props;\n    const ref: any = useRef(null);\n\n    useImperativeHandle(currentRef, () => {\n      return { open: eventOpen, close: eventClose };\n    });\n\n    const eventOpen = () => {\n      ref.current.open();\n    };\n\n    const eventClose = () => {\n      ref.current.close();\n    };\n\n    const _renderItem = (item: any) => {\n      return (\n        <View style={styles.item}>\n          <Image source={item[imageField]} style={[styles.image, imageStyle]} />\n          <Text style={[styles.selectedTextStyle, selectedTextStyle]}>\n            {item[labelField]}\n          </Text>\n        </View>\n      );\n    };\n\n    const selectItem = useMemo(() => {\n      const index = data.findIndex((e) => e[valueField] === value);\n      return data[index];\n    }, [data, valueField, value]);\n\n    return (\n      <Dropdown\n        testID={testID}\n        itemTestIDField={itemTestIDField}\n        ref={ref}\n        {...props}\n        renderItem={_renderItem}\n        renderLeftIcon={() => {\n          if (selectItem?.image) {\n            return (\n              <Image\n                source={selectItem.image}\n                style={[styles.image, imageStyle]}\n              />\n            );\n          } else {\n            return null;\n          }\n        }}\n      />\n    );\n  }\n);\n\nexport default SelectCountryConponent;\n"]},"metadata":{},"sourceType":"module"}