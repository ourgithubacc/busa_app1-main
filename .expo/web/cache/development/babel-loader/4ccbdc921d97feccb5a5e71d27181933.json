{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nvar isOrientationPortrait = function isOrientationPortrait(_ref) {\n  var width = _ref.width,\n    height = _ref.height;\n  return height >= width;\n};\nvar isOrientationLandscape = function isOrientationLandscape(_ref2) {\n  var width = _ref2.width,\n    height = _ref2.height;\n  return width >= height;\n};\nexport function useDeviceOrientation() {\n  var screen = Dimensions.get('screen');\n  var initialState = {\n    portrait: isOrientationPortrait(screen),\n    landscape: isOrientationLandscape(screen)\n  };\n  var _useState = useState(initialState),\n    _useState2 = _slicedToArray(_useState, 2),\n    orientation = _useState2[0],\n    setOrientation = _useState2[1];\n  useEffect(function () {\n    var onChange = function onChange(_ref3) {\n      var screen = _ref3.screen;\n      setOrientation({\n        portrait: isOrientationPortrait(screen),\n        landscape: isOrientationLandscape(screen)\n      });\n    };\n    var subscription = Dimensions.addEventListener('change', onChange);\n    return function () {\n      if (typeof (subscription === null || subscription === void 0 ? void 0 : subscription.remove) === 'function') {\n        subscription.remove();\n      } else {\n        Dimensions.removeEventListener('change', onChange);\n      }\n    };\n  }, []);\n  return orientation.portrait === true ? 'PORTRAIT' : 'LANDSCAPE';\n}","map":{"version":3,"mappings":";AACA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA;AAG3C,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqB,CAAGC;EAAA,IAAGC,KAAK,GAAsBD,KAA3BC,KAAK;IAAEC,SAAoBF,KAApBE;EAAoB,OAC1DA,MAAM,IAAID,KAAK;AAAA;AACjB,IAAME,sBAAsB,GAAG,SAAzBA,sBAAsB,CAAGC;EAAA,IAAGH,KAAK,GAAsBG,MAA3BH,KAAK;IAAEC,SAAoBE,MAApBF;EAAoB,OAC3DD,KAAK,IAAIC,MAAM;AAAA;AAEjB,OAAO,SAASG,oBAAoB,GAAG;EACrC,IAAMC,MAAM,GAAGC,UAAU,CAACC,GAAG,CAAC,QAAQ,CAAC;EACvC,IAAMC,YAAY,GAAG;IACnBC,QAAQ,EAAEX,qBAAqB,CAACO,MAAM,CAAC;IACvCK,SAAS,EAAER,sBAAsB,CAACG,MAAM;EAC1C,CAAC;EAED,gBAAsCR,QAAQ,CAACW,YAAY,CAAC;IAAA;IAArDG,WAAW;IAAEC,cAAc;EAElChB,SAAS,CAAC,YAAM;IACd,IAAMiB,QAAQ,GAAG,SAAXA,QAAQ,CAAGC,OAAwC;MAAA,IAArCT,SAAgCS,MAAhCT;MAClBO,cAAc,CAAC;QACbH,QAAQ,EAAEX,qBAAqB,CAACO,MAAM,CAAC;QACvCK,SAAS,EAAER,sBAAsB,CAACG,MAAM;MAC1C,CAAC,CAAC;IACJ,CAAC;IAED,IAAMU,YAAY,GAAGT,UAAU,CAACU,gBAAgB,CAAC,QAAQ,EAAEH,QAAQ,CAAC;IAEpE,OAAO,YAAM;MACX,IAAI,QAAOE,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEE,MAAM,MAAK,UAAU,EAAE;QAC9CF,YAAY,CAACE,MAAM,EAAE;MACvB,CAAC,MAAM;QAELX,UAAU,CAACY,mBAAmB,CAAC,QAAQ,EAAEL,QAAQ,CAAC;MACpD;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOF,WAAW,CAACF,QAAQ,KAAK,IAAI,GAAG,UAAU,GAAG,WAAW;AACjE","names":["useEffect","useState","isOrientationPortrait","_ref","width","height","isOrientationLandscape","_ref2","useDeviceOrientation","screen","Dimensions","get","initialState","portrait","landscape","orientation","setOrientation","onChange","_ref3","subscription","addEventListener","remove","removeEventListener"],"sources":["useDeviceOrientation.ts"],"sourcesContent":["/* eslint-disable no-shadow */\nimport { useEffect, useState } from 'react';\nimport { Dimensions, ScaledSize } from 'react-native';\n\nconst isOrientationPortrait = ({ width, height }: ScaledSize) =>\n  height >= width;\nconst isOrientationLandscape = ({ width, height }: ScaledSize) =>\n  width >= height;\n\nexport function useDeviceOrientation() {\n  const screen = Dimensions.get('screen');\n  const initialState = {\n    portrait: isOrientationPortrait(screen),\n    landscape: isOrientationLandscape(screen),\n  };\n\n  const [orientation, setOrientation] = useState(initialState);\n\n  useEffect(() => {\n    const onChange = ({ screen }: { screen: ScaledSize }) => {\n      setOrientation({\n        portrait: isOrientationPortrait(screen),\n        landscape: isOrientationLandscape(screen),\n      });\n    };\n\n    const subscription = Dimensions.addEventListener('change', onChange);\n\n    return () => {\n      if (typeof subscription?.remove === 'function') {\n        subscription.remove();\n      } else {\n        // React Native < 0.65\n        Dimensions.removeEventListener('change', onChange);\n      }\n    };\n  }, []);\n\n  return orientation.portrait === true ? 'PORTRAIT' : 'LANDSCAPE';\n}\n"]},"metadata":{},"sourceType":"module"}